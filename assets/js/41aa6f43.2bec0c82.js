"use strict";(self.webpackChunksdk_spec=self.webpackChunksdk_spec||[]).push([[179],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>k});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var o=n.createContext({}),m=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},p=function(e){var t=m(e.components);return n.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,i=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=m(a),k=l,h=d["".concat(o,".").concat(k)]||d[k]||u[k]||i;return a?n.createElement(h,r(r({ref:t},p),{},{components:a})):n.createElement(h,r({ref:t},p))}));function k(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=a.length,r=new Array(i);r[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:l,r[1]=s;for(var m=2;m<i;m++)r[m]=a[m];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},4877:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>m});var n=a(7462),l=(a(7294),a(3905));const i={},r=void 0,s={unversionedId:"Language-Independent Specification for Implementing the Topl SDK/Tetra SDK High Level Design",id:"Language-Independent Specification for Implementing the Topl SDK/Tetra SDK High Level Design",title:"Tetra SDK High Level Design",description:"The initial implementation of the SDK will be in Scala. The other implementation that will be needed for the initial release will be Dart, as it is required for Ribn.",source:"@site/docs/Language-Independent Specification for Implementing the Topl SDK/Tetra SDK High Level Design.md",sourceDirName:"Language-Independent Specification for Implementing the Topl SDK",slug:"/Language-Independent Specification for Implementing the Topl SDK/Tetra SDK High Level Design",permalink:"/sdk-spec/docs/Language-Independent Specification for Implementing the Topl SDK/Tetra SDK High Level Design",draft:!1,editUrl:"https://github.com/topl/sdk-spec/tree/main/packages/create-docusaurus/templates/shared/docs/Language-Independent Specification for Implementing the Topl SDK/Tetra SDK High Level Design.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Introduction to the Language-Independent Topl SDK Specification",permalink:"/sdk-spec/docs/Language-Independent Specification for Implementing the Topl SDK/Introduction to the Language-Independent Topl SDK Specification"},next:{title:"Transaction-Related Interfaces",permalink:"/sdk-spec/docs/Language-Independent Specification for Implementing the Topl SDK/Transaction API"}},o={},m=[{value:"Logging Requirements",id:"logging-requirements",level:2},{value:"Common API Components",id:"common-api-components",level:2},{value:"<strong>Common Interfaces</strong>",id:"common-interfaces",level:3},{value:"<strong>MessageDigester</strong>",id:"messagedigester",level:4},{value:"Type Parameters",id:"type-parameters",level:5},{value:"Implemented By",id:"implemented-by",level:5},{value:"Methods/Functions",id:"methodsfunctions",level:5},{value:"Implementation Notes",id:"implementation-notes",level:5},{value:"See Also",id:"see-also",level:5},{value:"<strong>Result</strong>",id:"result",level:4},{value:"Type Parameters",id:"type-parameters-1",level:5},{value:"Implemented By",id:"implemented-by-1",level:5},{value:"Methods/Functions",id:"methodsfunctions-1",level:5},{value:"Implementation Notes",id:"implementation-notes-1",level:5},{value:"<strong>Common Classes</strong>",id:"common-classes",level:3},{value:"<strong>Failure</strong>",id:"failure",level:4},{value:"Type Parameters",id:"type-parameters-2",level:5},{value:"Implements",id:"implements",level:5},{value:"Constructor",id:"constructor",level:5},{value:"Methods/Functions",id:"methodsfunctions-2",level:5},{value:"Implementation Notes",id:"implementation-notes-2",level:5},{value:"<strong>Success</strong>",id:"success",level:4},{value:"Type Parameters",id:"type-parameters-3",level:5},{value:"Implements",id:"implements-1",level:5},{value:"Constructor",id:"constructor-1",level:5},{value:"Methods/Functions",id:"methodsfunctions-3",level:5},{value:"Implementation Notes",id:"implementation-notes-3",level:5},{value:"<strong>MessageDigestFactory</strong>",id:"messagedigestfactory",level:4},{value:"Type Parameters",id:"type-parameters-4",level:5},{value:"Implements",id:"implements-2",level:5},{value:"Constructor",id:"constructor-2",level:5},{value:"Methods/Functions",id:"methodsfunctions-4",level:5},{value:"Implementation Notes",id:"implementation-notes-4",level:5},{value:"Blockchain API",id:"blockchain-api",level:2},{value:"<strong>Blockchain-Related Interfaces</strong>",id:"blockchain-related-interfaces",level:3},{value:"<strong>Application</strong>",id:"application",level:4},{value:"Type Parameters",id:"type-parameters-5",level:5},{value:"Implemented By",id:"implemented-by-2",level:5},{value:"Methods/Functions",id:"methodsfunctions-5",level:5},{value:"Implementation Notes",id:"implementation-notes-5",level:5},{value:"<strong>Account</strong>",id:"account",level:4},{value:"Type Parameters",id:"type-parameters-6",level:5},{value:"Implemented By",id:"implemented-by-3",level:5},{value:"Methods/Functions",id:"methodsfunctions-6",level:5},{value:"Implementation Notes",id:"implementation-notes-6",level:5},{value:"<strong>Address</strong>",id:"address",level:4},{value:"Type Parameters",id:"type-parameters-7",level:5},{value:"Implemented By",id:"implemented-by-4",level:5},{value:"Methods/Functions",id:"methodsfunctions-7",level:5},{value:"Implementation Notes",id:"implementation-notes-7",level:5},{value:"<strong>Wallet</strong>",id:"wallet",level:4},{value:"Type Parameters",id:"type-parameters-8",level:5},{value:"Implemented By",id:"implemented-by-5",level:5},{value:"Methods/Functions",id:"methodsfunctions-8",level:5},{value:"Implementation Notes",id:"implementation-notes-8",level:5},{value:"<strong>Proof</strong>",id:"proof",level:4},{value:"<strong>Proposition</strong>",id:"proposition",level:4},{value:"<strong>Blockchain-Related Classes</strong>",id:"blockchain-related-classes",level:3},{value:"<strong>AssetRequest</strong>",id:"assetrequest",level:4},{value:"Type Parameters",id:"type-parameters-9",level:5},{value:"Implements",id:"implements-3",level:5},{value:"Constructor",id:"constructor-3",level:5},{value:"Methods/Functions",id:"methodsfunctions-9",level:5},{value:"Implementation Notes",id:"implementation-notes-9",level:5},{value:"<strong>CategorizedBoxes</strong>",id:"categorizedboxes",level:4},{value:"Type Parameters",id:"type-parameters-10",level:5},{value:"Implements",id:"implements-4",level:5},{value:"Constructor",id:"constructor-4",level:5},{value:"Methods/Functions",id:"methodsfunctions-10",level:5},{value:"Implementation Notes",id:"implementation-notes-10",level:5},{value:"<strong>Box</strong>",id:"box",level:4},{value:"Type Parameters",id:"type-parameters-11",level:5},{value:"Implements",id:"implements-5",level:5},{value:"Constructor",id:"constructor-5",level:5},{value:"Methods/Functions",id:"methodsfunctions-11",level:5},{value:"Implementation Notes",id:"implementation-notes-11",level:5},{value:"<strong>WalletFactory</strong>",id:"walletfactory",level:4},{value:"Type Parameters",id:"type-parameters-12",level:5},{value:"Implements",id:"implements-6",level:5},{value:"Constructor",id:"constructor-6",level:5},{value:"Methods/Functions",id:"methodsfunctions-12",level:5},{value:"Implementation Notes",id:"implementation-notes-12",level:5},{value:"<strong>LevelDbWallet</strong>",id:"leveldbwallet",level:4},{value:"Type Parameters",id:"type-parameters-13",level:5},{value:"Implements",id:"implements-7",level:5},{value:"Constructor",id:"constructor-7",level:5},{value:"Methods/Functions",id:"methodsfunctions-13",level:5},{value:"Implementation Notes",id:"implementation-notes-13",level:5},{value:"<strong>IndexedDbWallet</strong>",id:"indexeddbwallet",level:4},{value:"Type Parameters",id:"type-parameters-14",level:5},{value:"Implements",id:"implements-8",level:5},{value:"Constructor",id:"constructor-8",level:5},{value:"Methods/Functions",id:"methodsfunctions-14",level:5},{value:"Implementation Notes",id:"implementation-notes-14",level:5},{value:"Structure of an Asset Label",id:"structure-of-an-asset-label",level:2}],p={toc:m};function u(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"The initial implementation of the SDK will be in Scala. The other implementation that will be needed for the initial release will be Dart, as it is required for Ribn."),(0,l.kt)("p",null,"Additional implementations to be done after the required ones are in no particular order:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Java (a thin wrapper of the Scala)"),(0,l.kt)("li",{parentName:"ul"},"Python"),(0,l.kt)("li",{parentName:"ul"},"GoLang"),(0,l.kt)("li",{parentName:"ul"},"Rust")),(0,l.kt)("h1",{id:"table-of-contents"},"Table of contents"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#table-of-contents"},"Table of contents")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#sdk-interfaces"},"SDK Interfaces"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#logging-requirements"},"Logging Requirements")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#common-api-components"},"Common API Components"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#common-interfaces"},"Common Interfaces"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#messagedigester"},"MessageDigester")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#result"},"Result")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#common-classes"},"Common Classes"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#failure"},"Failure")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#success"},"Success")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#messagedigestfactory"},"MessageDigestFactory")))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#blockchain-api"},"Blockchain API"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#blockchain-related-interfaces"},"Blockchain-Related Interfaces"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#application"},"Application")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#account"},"Account")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#address"},"Address")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#wallet"},"Wallet")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#proof"},"Proof")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#proposition"},"Proposition")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#blockchain-related-classes"},"Blockchain-Related Classes"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#assetrequest"},"AssetRequest")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#categorizedboxes"},"CategorizedBoxes")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#box"},"Box")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#walletfactory"},"WalletFactory")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#leveldbwallet"},"LevelDbWallet")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#indexeddbwallet"},"IndexedDbWallet")))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#hiding-nondeterminism"},"Hiding Nondeterminism")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#genus-api"},"Genus API")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#multi-signature-spending-propositions"},"Multi-Signature Spending Propositions")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#implementation-guidelines"},"Implementation Guidelines"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#structure-of-an-asset-label"},"Structure of an Asset Label"))))),(0,l.kt)("h1",{id:"sdk-interfaces"},"SDK Interfaces"),(0,l.kt)("p",null,"Below are descriptions of the SDK interfaces. The descriptions are documented in a way that assumes all languages used for implementations have a common set of features related to supporting the object-oriented paradigm:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Classes that can be used to create instances or objects. The objects have functions/methods and attributes. We do not assume that there is inheritance between classes."),(0,l.kt)("li",{parentName:"ul"},"Some implementation languages allow functions or methods to throw exceptions or panic when something unexpected happens that is outside of the assumptions, requirements and behaviors documented here. This way of dealing with unexpected behavior is not be documented as part of any interface documented here. If implementations need to respond to an unexpected situation in this way, the implementation must document this behavior."),(0,l.kt)("li",{parentName:"ul"},"Interfaces describe a set of functions/methods provided by classes that implement the interfaces. We do not assume that interfaces can inherit from interfaces."),(0,l.kt)("li",{parentName:"ul"},"We assume that classes can implement multiple interfaces."),(0,l.kt)("li",{parentName:"ul"},"The type of a parameter or return value can be a class, interface or primitive type."),(0,l.kt)("li",{parentName:"ul"},"We do not assume that classes can have more than one public constructor."),(0,l.kt)("li",{parentName:"ul"},"We assume that there are static functions/methods that can be associated with a class that can be called without having an instance of the class. These will be primarily used to create instances of their associated class or to set global parameters."),(0,l.kt)("li",{parentName:"ul"},"We assume that the language is either dynamically typed or statically typed with classes and interfaces can be generic/parametric. Generic/parametric classes and interfaces have type parameters used to specify the types of method parameters and return values."),(0,l.kt)("li",{parentName:"ul"},"We assume that the language provides a future or promise type that encapsulates values that are computed asynchronously. The minimal functionality assumed for the future or promise type is that it has methods to query whether the computation has finished and a blocking operation to get the value of the computation. \\\nIn the rest of this document, we consider \u201cfuture\u201d and \u201cpromise\u201d to be synonyms and use \u201cfuture\u201d to refer to both."),(0,l.kt)("li",{parentName:"ul"},"We assume that methods/functions can have parameters whose values are methods/functions (first-class functions)."),(0,l.kt)("li",{parentName:"ul"},"We assume that the language provides types to satisfy the following descriptions",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Byte[n]")," \\\nA sequence of bytes with a maximum length of ",(0,l.kt)("inlineCode",{parentName:"li"},"n")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Boolean")," \\\nOne of two possible values: True (1) or False (0)."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"String")," \\\nAn arbitrary-length sequence of characters.")))),(0,l.kt)("h2",{id:"logging-requirements"},"Logging Requirements"),(0,l.kt)("p",null,"All interfaces will be implemented to work with a configurable logging library. The logging library should have methods that allow log items to be generated. Each logging call will associate the log item with a logging level (error, warning, info, debug, trace). The configuration of the logging library should determine where the log items are sent ( local file, logging service, standard output, database, \u2026) and the minimum level of message that will be send to each output destination."),(0,l.kt)("p",null,"All implementations of the SDK\u2019s public methods should generate trace level (debug if trace is not supported) log message to indicate entry or exit from the method. All external interactions (calls to the blockchain, calls to Genus, updates of the wallet, \u2026) must be logged."),(0,l.kt)("h2",{id:"common-api-components"},"Common API Components"),(0,l.kt)("p",null,"The classes and interfaces described below, along with their methods/functions are minimal requirements.\nImplementations may supply additional classes, interfaces and methods/functions that are common to the\nblockchain API and the Genus API."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#common-interfaces"},"Common Interfaces"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#messagedigester"},"MessageDigester")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#result"},"Result")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#common-classes"},"Common Classes"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#failure"},"Failure")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#success"},"Success")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#messagedigestfactory"},"MessageDigestFactory"))))),(0,l.kt)("h3",{id:"common-interfaces"},(0,l.kt)("strong",{parentName:"h3"},"Common Interfaces")),(0,l.kt)("h4",{id:"messagedigester"},(0,l.kt)("strong",{parentName:"h4"},"MessageDigester")),(0,l.kt)("p",null,"This interface is implemented by objects that compute a cryptographic hash from an input that consists of a stream of bytes."),(0,l.kt)("h5",{id:"type-parameters"},"Type Parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("h5",{id:"implemented-by"},"Implemented By"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"No public implementations")),(0,l.kt)("h5",{id:"methodsfunctions"},"Methods/Functions"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"No public methods/functions")),(0,l.kt)("h5",{id:"implementation-notes"},"Implementation Notes"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("h5",{id:"see-also"},"See Also"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"#messagedigestfactory"},"MessageDigestFactory")),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"result"},(0,l.kt)("strong",{parentName:"h4"},"Result")),(0,l.kt)("p",null,"This interface is implemented by the return type of many methods/functions. Objects that implement this interface contain either a success value or a failure value produced by a method/function call."),(0,l.kt)("h5",{id:"type-parameters-1"},"Type Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"S \u2014 The type of value returned when a method/function call is successful."),(0,l.kt)("li",{parentName:"ul"},"F \u2014 The type of value returned when a method/function call fails.")),(0,l.kt)("h5",{id:"implemented-by-1"},"Implemented By"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"#success"},"Success"),", ",(0,l.kt)("a",{parentName:"p",href:"#failure"},"Failure")),(0,l.kt)("h5",{id:"methodsfunctions-1"},"Methods/Functions"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"isSuccess"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\nBoolean \\\ntrue if the object contains the result of a successful function call; otherwise false.")))),(0,l.kt)("h5",{id:"implementation-notes-1"},"Implementation Notes"),(0,l.kt)("p",null,"When implemented in a language that has a well established custom for using certain common library classes for this purpose, we will use the customary names for this interface and its methods rather than the ones documented here."),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"common-classes"},(0,l.kt)("strong",{parentName:"h3"},"Common Classes")),(0,l.kt)("h4",{id:"failure"},(0,l.kt)("strong",{parentName:"h4"},"Failure")),(0,l.kt)("p",null,"Instances of this class contain a failure value returned by a function call."),(0,l.kt)("h5",{id:"type-parameters-2"},"Type Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"S \u2014 The type of value returned when a method/function call is successful. This is inherited from the ",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result")," interface, but not used."),(0,l.kt)("li",{parentName:"ul"},"F \u2014 The type of value returned when a method/function call fails.")),(0,l.kt)("h5",{id:"implements"},"Implements"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"#result"},"Result")),(0,l.kt)("h5",{id:"constructor"},"Constructor"),(0,l.kt)("p",null,"The construct is private or there is none."),(0,l.kt)("h5",{id:"methodsfunctions-2"},"Methods/Functions"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"isSuccess"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\nfalse")))),(0,l.kt)("h5",{id:"implementation-notes-2"},"Implementation Notes"),(0,l.kt)("p",null,"When implemented in a language that has a well established custom for using certain common library classes for this purpose, we will use the customary names for this class and its method rather than the ones documented here."),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"success"},(0,l.kt)("strong",{parentName:"h4"},"Success")),(0,l.kt)("p",null,"Instances of this class contain a success value returned by a function call."),(0,l.kt)("h5",{id:"type-parameters-3"},"Type Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"S \u2014 The type of value returned when a method/function call is successful."),(0,l.kt)("li",{parentName:"ul"},"F \u2014 The type of value returned when a method/function call fails. This is inherited from the ",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result")," interface, but not used.")),(0,l.kt)("h5",{id:"implements-1"},"Implements"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"#result"},"Result")),(0,l.kt)("h5",{id:"constructor-1"},"Constructor"),(0,l.kt)("p",null,"The constructor is private or there is none."),(0,l.kt)("h5",{id:"methodsfunctions-3"},"Methods/Functions"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"isSuccess"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\ntrue")))),(0,l.kt)("h5",{id:"implementation-notes-3"},"Implementation Notes"),(0,l.kt)("p",null,"When implemented in a language that has a well established custom for using certain common library classes for this purpose, we will use the customary names for this class and its method rather than the ones documented here."),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"messagedigestfactory"},(0,l.kt)("strong",{parentName:"h4"},"MessageDigestFactory")),(0,l.kt)("p",null,"This is a utility class that is used to construct digesters for various hash algorithms."),(0,l.kt)("h5",{id:"type-parameters-4"},"Type Parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("h5",{id:"implements-2"},"Implements"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("h5",{id:"constructor-2"},"Constructor"),(0,l.kt)("p",null,"The constructor is private or there is none."),(0,l.kt)("h5",{id:"methodsfunctions-4"},"Methods/Functions"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blake2b160Digester")," \\\nReturn an object that computes a 160 bit Blake2b hash",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#messagedigester"},"MessageDigester")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blake2b256Digester")," \\\nReturn an object that computes a 256 bit Blake2b hash",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#messagedigester"},"MessageDigester")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blake2b384Digester")," \\\nReturn an object that computes a 384 bit Blake2b hash",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#messagedigester"},"MessageDigester")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blake2b512Digester")," \\\nReturn an object that computes a 512 bit Blake2b hash",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#messagedigester"},"MessageDigester")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blake2s128Digester")," \\\nReturn an object that computes a 128 bit Blake2s hash",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#messagedigester"},"MessageDigester")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blake2s160Digester")," \\\nReturn an object that computes a 160 bit Blake2s hash",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#messagedigester"},"MessageDigester")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blake2s224Digester")," \\\nReturn an object that computes a 224 bit Blake2s hash",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#messagedigester"},"MessageDigester")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blake2s256Digester")," \\\nReturn an object that computes a 256 bit Blake2s hash",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#messagedigester"},"MessageDigester")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blake3_256Digester")," \\\nReturn an object that computes a 256 bit Blake3 hash",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#messagedigester"},"MessageDigester")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"DSTU7564_256Digester")," \\\nReturn an object that computes a 256 bit DSTU7564 hash",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#messagedigester"},"MessageDigester")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"DSTU7564_384Digester")," \\\nReturn an object that computes a 384 bit DSTU7564 hash",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#messagedigester"},"MessageDigester")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"DSTU7564_512Digester")," \\\nReturn an object that computes a 512 bit DSTU7564 hash",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#messagedigester"},"MessageDigester")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"RIPEMD_128Digester")," \\\nReturn an object that computes a 128 bit RIBEMD hash",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#messagedigester"},"MessageDigester")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"RIPEMD_160Digester")," \\\nReturn an object that computes a 160 bit RIBEMD hash",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#messagedigester"},"MessageDigester")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"RIPEMD_256Digester")," \\\nReturn an object that computes a 256 bit RIBEMD hash",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#messagedigester"},"MessageDigester")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"RIPEMD_320Digester")," \\\nReturn an object that computes a 320 bit RIBEMD hash",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#messagedigester"},"MessageDigester")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"SHA1Digester")," \\\nReturn an object that computes a 128 bit SHA-1 hash",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#messagedigester"},"MessageDigester")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"SHA2_224Digester")," \\\nReturn an object that computes a 224 bit SHA-2 hash",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#messagedigester"},"MessageDigester")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"SHA2_256Digester")," \\\nReturn an object that computes a 256 bit SHA-2 hash",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#messagedigester"},"MessageDigester")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"SHA2_384Digester")," \\\nReturn an object that computes a 384 bit SHA-2 hash",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#messagedigester"},"MessageDigester")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"SHA2_512Digester")," \\\nReturn an object that computes a 512 bit SHA-2 hash",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#messagedigester"},"MessageDigester")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"SHA3_224Digester")," \\\nReturn an object that computes a 224 bit SHA-3 hash",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#messagedigester"},"MessageDigester")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"SHA3_256Digester")," \\\nReturn an object that computes a 256 bit SHA-3 hash",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#messagedigester"},"MessageDigester")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"SHA3_384Digester")," \\\nReturn an object that computes a 384 bit SHA-3 hash",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#messagedigester"},"MessageDigester")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"SHA3_512Digester")," \\\nReturn an object that computes a 512 bit SHA-3 hash",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#messagedigester"},"MessageDigester")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"WhirlpoolDigester")," \\\nReturn an object that computes a 512 bit Whirlpool hash",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#messagedigester"},"MessageDigester"))))),(0,l.kt)("h5",{id:"implementation-notes-4"},"Implementation Notes"),(0,l.kt)("p",null,"When implemented in a language that has a well established custom for using certain common library classes for this purpose, we will use the customary names for this class and its method rather than the ones documented here."),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"blockchain-api"},"Blockchain API"),(0,l.kt)("p",null,"The purpose of the blockchain API is to facilitate interactions between the Topl blockchain and applications. The following activity diagram shows the pattern that a typical interaction will follow:"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://www.plantuml.com/plantuml/png/RLAzRjmm3Dxr50IwjAzmj-JI8UXIj420BbracRQ5aobLf78Du8SlPS66ZMQwCt--7tryOh5PoXpCyYdPW6D6fCKkjvI2TrPy9BEEcCipZfx0HMB9nQsTE81aIpnWRd_iMh-Q8UQxkRoW0E5VWKA5iGVRzncPpP3Z30yRWlObWlP05qoX3IpNOMOKRb1WH-j99Tv8_9-2loOlkBoWmYxcyhDWVeVr2vv3T7StwJJSVdoho-2Auf5ix9-Hlq0STdmrQv3wflZhvaubfnpVa4w-cYLEEkzf19r8aNrjmS7JRrBiwBmLjV7mCcqI6kSc1Fbw95GmLLMu0hCVgVxUyVq8V9x_I5wNe-sTPVa_ZlCxQGLaGkFYd1GP-zF2-T637oVfGi7bDQO0tr4Usbwgc7ds9oeJ2Rej0iNPCsgilMUdgZDNxZPePB9IhqfqeTNFbbxF5UXGDIF3csVV1JIUrgL6SDsZhB5U3bSC9VLMaBUxMtFPapWU14jCvabnoXp-0G00",alt:"SDK Process"})),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#blockchain-related-interfaces"},"Blockchain-Related Interfaces"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#application"},"Application")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#account"},"Account")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#address"},"Address")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#wallet"},"Wallet")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#proof"},"Proof")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#proposition"},"Proposition")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#blockchain-related-classes"},"Blockchain-Related Classes"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#assetrequest"},"AssetRequest")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#categorizedboxes"},"CategorizedBoxes")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#box"},"Box")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#walletfactory"},"WalletFactory")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#leveldbwallet"},"LevelDbWallet")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#indexeddbwallet"},"IndexedDbWallet"))))),(0,l.kt)("h3",{id:"blockchain-related-interfaces"},(0,l.kt)("strong",{parentName:"h3"},"Blockchain-Related Interfaces")),(0,l.kt)("h4",{id:"application"},(0,l.kt)("strong",{parentName:"h4"},"Application")),(0,l.kt)("p",null,"This interface is implemented by objects that represent an application in a wallet. Applications are used to manager a set of accounts that are used for a related purpose, such as tracking all the shipments for a particular use-case."),(0,l.kt)("h5",{id:"type-parameters-5"},"Type Parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("h5",{id:"implemented-by-2"},"Implemented By"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("h5",{id:"methodsfunctions-5"},"Methods/Functions"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getId")," \\\nReturn the ID (numeric index) of this application. This identifies the application in the local wallet and cannot ever change. Note that applications shared with remote wallets will be identified in the remote wallets by a different index than in the local wallet.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = Int32 \\\nID of this application"),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getName")," \\\nReturn the unique name of this application.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = String \\\nThe application name"),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"setName")," \\\nSet the name of this application. The name must be unique within the CredentialSet. This will not persist across devices.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"name")," \\\nAn arbitrary name that can be used to identify the application. It is unique within the CredentialSet.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: String"),(0,l.kt)("li",{parentName:"ul"},"Optional: no"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value denotes a successful update"),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Another application in this wallet already uses the name"),(0,l.kt)("li",{parentName:"ul"},"The name is invalid"),(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"createAccount")," \\\nCreate a new account tied to this application in the local wallet.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"aliases"),"\nA collection of arbitrary names that uniquely identify the new account within the application.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: Collection of String"),(0,l.kt)("li",{parentName:"ul"},"Optional: yes"),(0,l.kt)("li",{parentName:"ul"},"Default: empty collection"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"partialProposition")," \\\nA partial proposition, or proposition template, which will create the proposition instance once the required parameters are supplied. This is used to generate addresses under the account.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: (any[]) => ",(0,l.kt)("a",{parentName:"li",href:"#proposition"},"Proposition")," | TBD"),(0,l.kt)("li",{parentName:"ul"},"Optional: yes"),(0,l.kt)("li",{parentName:"ul"},"Default: A knowledge (signing) partial proposition"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = ",(0,l.kt)("a",{parentName:"li",href:"#account"},"Account")," \\\nThe created account."),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getAccountById")," \\\nGet an existing account under this application in the local wallet using it\u2019s ID.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"accountId")," \\\nThe unique account ID.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: Int32"),(0,l.kt)("li",{parentName:"ul"},"Optional: no"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = ",(0,l.kt)("a",{parentName:"li",href:"#account"},"Account")," \\\nThe account."),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The account was not found in the wallet."),(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getAccountByName")," \\\nGet an existing account under this application in the local wallet using the account's alias name. An account alias name is unique within the application it belongs to.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"name")," \\\nA String that identifies an account in the application.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: String"),(0,l.kt)("li",{parentName:"ul"},"Optional: no"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = ",(0,l.kt)("a",{parentName:"li",href:"#account"},"Account")," \\\nThe account."),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The name is null, empty or is not a valid account name."),(0,l.kt)("li",{parentName:"ul"},"The account was not found in the wallet."),(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getNextAddress")," \\\nGet the address associated with the next unused index for an account in this application, optionally specifying the underlying account. This also updates the index of the next usable address for the account. The address's spending proposition is derived from the account's partial proposition and the address's verification key.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"accountId")," \\\nThe ID of the account within this application that the address resides in.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: Int32"),(0,l.kt)("li",{parentName:"ul"},"Optional: yes"),(0,l.kt)("li",{parentName:"ul"},"Default: 0"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = ",(0,l.kt)("a",{parentName:"li",href:"#address"},"Address")),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The specified account does not exist within this application in the wallet."),(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getAddressByIndex")," \\\nGet the address at an index for an account in this application, optionally specifying the underlying account. ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"index")," \\\nThe index of the address to retrieve",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: Int32"),(0,l.kt)("li",{parentName:"ul"},"Optional: no"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"accountId")," \\\nThe ID of the account within this application that the address resides in.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: Int32"),(0,l.kt)("li",{parentName:"ul"},"Optional: yes"),(0,l.kt)("li",{parentName:"ul"},"Default: 0"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = ",(0,l.kt)("a",{parentName:"li",href:"#address"},"Address")),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The index is not in range or invalid"),(0,l.kt)("li",{parentName:"ul"},"The specified account does not exist within this application in the wallet."),(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getAddressByValue")," \\\nGet the address using it\u2019s Base58 encoded value, optionally specifying the underlying account.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"address")," \\\nThe Base58 encoded address value",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: base58"),(0,l.kt)("li",{parentName:"ul"},"Optional: no"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"accountId")," \\\nThe ID of the account within this application that the address resides in.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: Int32"),(0,l.kt)("li",{parentName:"ul"},"Optional: yes"),(0,l.kt)("li",{parentName:"ul"},"Default: 0"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = ",(0,l.kt)("a",{parentName:"li",href:"#address"},"Address")),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error\nconditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An address with this value does not exist in the account"),(0,l.kt)("li",{parentName:"ul"},"The specified account does not exist within this application in the wallet."),(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getAddressByAssetLabels")," \\\nGet the addresses (in an account) with contents that are needed to satisfy desired quantities of assets. The addresses are returned along with it's boxes grouped into three categories; spend, split, and move.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"assetRequests")," \\\nA collection of requests which represent the requirements of desired assets.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: Array of ",(0,l.kt)("a",{parentName:"li",href:"#assetrequest"},"AssetRequest")),(0,l.kt)("li",{parentName:"ul"},"Optional: no"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"accountId")," \\\nThe ID of the account within this application for which we are retrieving addresses from.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: Int32"),(0,l.kt)("li",{parentName:"ul"},"Optional: yes"),(0,l.kt)("li",{parentName:"ul"},"Default: 0"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = Array of ",(0,l.kt)("a",{parentName:"li",href:"#categorizedboxes"},"CategorizedBoxes")),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The specified account does not exist within this application in the wallet."),(0,l.kt)("li",{parentName:"ul"},"There is not a combination of boxes that together contain a sufficient quantity."),(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller.")))))))),(0,l.kt)("h5",{id:"implementation-notes-5"},"Implementation Notes"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"account"},(0,l.kt)("strong",{parentName:"h4"},"Account")),(0,l.kt)("p",null,"This interface is implemented by objects that represent a bookkeeping account within an application in a wallet. Accounts are used to manage a set of blockchain addresses that are use for the same purpose, such as a sequence of transfers related to a particular shipment or a set of addresses used to keep the wallet owner\u2019s polys."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\ud83d\udea7 Reminder\nA link to the description of accounts on the Wallet page should be added here.")),(0,l.kt)("h5",{id:"type-parameters-6"},"Type Parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("h5",{id:"implemented-by-3"},"Implemented By"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"No public implementations")),(0,l.kt)("h5",{id:"methodsfunctions-6"},"Methods/Functions"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"getId")," \\\nReturn the ID (numeric index) of this account within its application. This identifies the account in a within an application in the local wallet and cannot ever change. Note that accounts shared with remote wallets will be identified in the remote wallets by a different index than in the local wallet."),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = Int32 \\\nID of this account"),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"getPartialProposition")," \\\nReturn the partial proposition, or proposition template, to create the proposition instance once the required parameters are supplied. This is used to generate addresses under this account.  The address's spending proposition is derived from the account's partial proposition and the address's verification key."),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = (any[]) => ",(0,l.kt)("a",{parentName:"li",href:"#proposition"},"Proposition")," | TBD"),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"getDescription")," \\\nReturn the description of this account."),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = String \\\nThe account description"),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"setDescription")," \\\nSet the description of this account. This will not persist across devices."),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"description")," \\\nAn arbitrary String that can be used to describe the account",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: String"),(0,l.kt)("li",{parentName:"ul"},"Optional: no"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value denotes a successful update"),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The description is invalid"),(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"getNames")," \\\nGet the names that can be used to look up this account. These names are unique within an application."),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = A collection of strings \\\nThese are the names associated with the account."),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"addName")," \\\nAdd an additional name for the account. These names are unique within an application. This will not persist across devices. "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"name")," \\\nAn arbitrary String that can be used to identify the account. For accounts that human beings will interact with, this should be an easy to remember name. For accounts that other applications will interact with, this should be the id the that other application will use to identify the account.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: String"),(0,l.kt)("li",{parentName:"ul"},"Optional: no"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = A collection of strings \\\nThese are the names now associated with the account."),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The name duplicates a name associated with this account."),(0,l.kt)("li",{parentName:"ul"},"The name duplicates a name associated with another account tied to the same application."),(0,l.kt)("li",{parentName:"ul"},"The name is null, empty or cannot be used for some other reason."),(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"removeName")," \\\nRemove a name from the account. These names are unique within an application."),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"name")," \\\nA String that can be used to identify the account.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: String"),(0,l.kt)("li",{parentName:"ul"},"Optional: no"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = A collection of strings \\\nThese are the remaining names associated with the account."),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The name is not associated with this account."),(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"getNextAddress")," \\\nGet the address at the next unused index for this account. This also updates the index of the next usable address for this account."),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = ",(0,l.kt)("a",{parentName:"li",href:"#address"},"Address")),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"getAddressByIndex")," \\\nGet the address at the index for this account."),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"index")," \\\nThe index of the address to retrieve",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: Int32"),(0,l.kt)("li",{parentName:"ul"},"Optional: no"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = ",(0,l.kt)("a",{parentName:"li",href:"#address"},"Address")),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The index is not in range or invalid"),(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"getAddressByValue")," \\\nGet the address using it\u2019s Base58 encoded value."),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"address")," \\\nThe Base58 encoded address value",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: base58"),(0,l.kt)("li",{parentName:"ul"},"Optional: no"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = ",(0,l.kt)("a",{parentName:"li",href:"#address"},"Address")),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error\nconditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An address with this value does not exist in the account"),(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"getAddressByAssetLabels")," \\\nGet the addresses with contents that are needed to satisfy desired quantities of assets. The addresses are returned along with it's boxes grouped into three categories; spend, split, and move."),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"assetRequests")," \\\nA collection of requests which represent the requirements of desired assets.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: Array of ",(0,l.kt)("a",{parentName:"li",href:"#assetrequest"},"AssetRequest")),(0,l.kt)("li",{parentName:"ul"},"Optional: no"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = Array of ",(0,l.kt)("a",{parentName:"li",href:"#categorizedboxes"},"CategorizedBoxes")),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"There is not a combination of boxes that together contain a sufficient quantity."),(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller.")))))))),(0,l.kt)("h5",{id:"implementation-notes-6"},"Implementation Notes"),(0,l.kt)("p",null,"A possible optimization that could be applied is to create addresses for accounts before they are needed by using a separate low priority thread.  "),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"address"},(0,l.kt)("strong",{parentName:"h4"},"Address")),(0,l.kt)("p",null,"This interface is implemented by objects that represent an address in an account."),(0,l.kt)("h5",{id:"type-parameters-7"},"Type Parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("h5",{id:"implemented-by-4"},"Implemented By"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"No public implementations")),(0,l.kt)("h5",{id:"methodsfunctions-7"},"Methods/Functions"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getIndex")," \\\nReturn the account\u2019s index of this address",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = Int32 \\\nIndex of the address"),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getValue")," \\\nReturn the address\u2019s unique Base58 encoded value.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = base58 \\\nThe value of the address"),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getDescription")," \\\nReturn the description of the address.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = String \\\nThe address description"),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"setDescription")," \\\nSet the description of the address. This will not persist across devices.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"description")," \\\nAn arbitrary String that can be used to describe the address",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: String"),(0,l.kt)("li",{parentName:"ul"},"Optional: no"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value denotes a successful update"),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The description is invalid"),(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getPublicKey")," \\\nReturn the public key for this address.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = base58 encoded string \\\nThe public key"),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getPrivateKey")," \\\nReturn the private key for this address.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = base58 emcpded string \\\nThe private key"),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getProposition")," \\\nReturn the spending proposition associated with this address, if available.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = ",(0,l.kt)("a",{parentName:"li",href:"#proposition"},"Proposition")," or <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> \\\nThe proposition object, if stored on the wallet. Otherwise an implementation specific value denoting nothing is returned."),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller.")))))))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"getAssets")," \\\nReturn the types of spendable assets contained in this address with the boxes that contain them."),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = A collection of asset labels (String) mapped to a collection of ",(0,l.kt)("a",{parentName:"li",href:"#box"},"boxes")," that contain them. \\\nThis is given by a collection of mappings from asset label to their respective boxes. See the ",(0,l.kt)("a",{parentName:"li",href:"#structure-of-an-asset-label"},"structure of an asset label")," for more information."),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"addBox")," \\\nAdd a box containing assets to this address. This is not a source of truth and if misused can lead to inconsistencies between the local wallet and the blockchain. The intended use case is to synchronize the local wallet after a successful minting or transfer to this address took place."),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"box")," \\\nThe box to add.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("a",{parentName:"li",href:"#box"},"Box")),(0,l.kt)("li",{parentName:"ul"},"Optional: no"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value denotes a successful add"),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"getBoxByBoxId")," \\\nGet a box at this address using it's ID."),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"boxId")," \\\nThe ID of the box.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: TBD"),(0,l.kt)("li",{parentName:"ul"},"Optional: no"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = ",(0,l.kt)("a",{parentName:"li",href:"#box"},"Box")," \\\nThe box."),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"A box with the specified ID does not exist at this address."),(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller.")))))))),(0,l.kt)("h5",{id:"implementation-notes-7"},"Implementation Notes"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"wallet"},(0,l.kt)("strong",{parentName:"h4"},"Wallet")),(0,l.kt)("p",null,"This interface is implemented by objects that manage an opened wallet and its contents."),(0,l.kt)("h5",{id:"type-parameters-8"},"Type Parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("h5",{id:"implemented-by-5"},"Implemented By"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"#leveldbwallet"},"LevelDbWallet"),", ",(0,l.kt)("a",{parentName:"p",href:"#indexeddbwallet"},"IndexedDbWallet")),(0,l.kt)("h5",{id:"methodsfunctions-8"},"Methods/Functions"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getLocation")," \\\nReturn the path of the local directory storing the files containing the data for this wallet database. This value uniquely identifies a wallet within an environment. It is also always useful in locating the wallet store. ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = String \\\nThis will differ depending on the implementation class."),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getWalletId")," \\\nReturn the Base58 encoded wallet ID.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = byte32 \\\nThe ID of the wallet, which will be generated from the same mnemonic as the wallet\u2019s keys."),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller.")))))))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getWalletName")," \\\nReturn the name of the wallet.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = String \\\nThe name of the wallet"),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"setWalletName")," \\\nSet the name of the wallet. This will not persist across devices.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"name")," \\\nAn arbitrary String that can be used as a human readable way to identify a wallet",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: String"),(0,l.kt)("li",{parentName:"ul"},"Optional: no"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value denotes a successful update"),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The name is invalid"),(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getWalletDescription")," \\\nReturn the description of the wallet.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = String \\\nThe wallet description"),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"setWalletDescription")," \\\nSet the description of the wallet. This will not persist across devices.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"description")," \\\nAn arbitrary String that can be used to describe the wallet",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: String"),(0,l.kt)("li",{parentName:"ul"},"Optional: no"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value denotes a successful update"),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The description is invalid"),(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"createApplication")," \\\nCreate a new application in this Wallet within the active CredentialSet.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = ",(0,l.kt)("a",{parentName:"li",href:"#application"},"Application")," \\\nThe created application."),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getApplicationById")," \\\nGet an existing application in this Wallet within the active CredentialSet using it\u2019s ID.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"applicationId")," \\\nThe unique application ID.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: Int32"),(0,l.kt)("li",{parentName:"ul"},"Optional: no"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = ",(0,l.kt)("a",{parentName:"li",href:"#application"},"Application")," \\\nThe account."),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The specified application was not found in the wallet."),(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getApplicationByName")," \\\nGet an existing application in this Wallet within the active CredentialSet using the application name.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"name")," \\\nA String that identifies the application.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: String"),(0,l.kt)("li",{parentName:"ul"},"Optional: no"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = ",(0,l.kt)("a",{parentName:"li",href:"#application"},"Application")," \\\nThe application."),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The name is null, empty or is not a valid account name."),(0,l.kt)("li",{parentName:"ul"},"The specified application was not found in the wallet."),(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"createAccount")," \\\nCreate a new account for a specified application in this Wallet within the active CredentialSet. ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"partialProposition")," \\\nA partial proposition, or proposition template, which will create the proposition instance once the required parameters are supplied. This is used to generate addresses under the account.  The address's spending proposition is derived from the account's partial proposition and the address's verification key.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: (any[]) => ",(0,l.kt)("a",{parentName:"li",href:"#proposition"},"Proposition")," | TBD"),(0,l.kt)("li",{parentName:"ul"},"Optional: yes"),(0,l.kt)("li",{parentName:"ul"},"Default: A knowledge (signing) partial proposition"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"applicationId")," \\\nThe unique ID of the application for which the account will be created under.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: Int32"),(0,l.kt)("li",{parentName:"ul"},"Optional: yes"),(0,l.kt)("li",{parentName:"ul"},"Default: 0"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = ",(0,l.kt)("a",{parentName:"li",href:"#account"},"Account")," \\\nThe created account."),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The specified application was not found in the wallet."),(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getAccountById")," \\\nGet an existing account  for a specified application in this Wallet within the active CredentialSet using it\u2019s ID.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"accountId")," \\\nThe unique account ID.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: Int32"),(0,l.kt)("li",{parentName:"ul"},"Optional: no"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"applicationId")," \\\nThe unique ID of the application for which the account belongs to.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: Int32"),(0,l.kt)("li",{parentName:"ul"},"Optional: yes"),(0,l.kt)("li",{parentName:"ul"},"Default: 0"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = ",(0,l.kt)("a",{parentName:"li",href:"#account"},"Account")," \\\nThe account."),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The specified account was not found in the wallet."),(0,l.kt)("li",{parentName:"ul"},"The specified application was not found in the wallet."),(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getAccountByName")," \\\nGet an existing account for a specified application in this Wallet within the active CredentialSet using an alias name.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"name")," \\\nA String that identifies an account.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: String"),(0,l.kt)("li",{parentName:"ul"},"Optional: no"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"applicationId")," \\\nThe unique ID of the application for which the account belongs to.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: Int32"),(0,l.kt)("li",{parentName:"ul"},"Optional: yes"),(0,l.kt)("li",{parentName:"ul"},"Default: 0"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = ",(0,l.kt)("a",{parentName:"li",href:"#account"},"Account")," \\\nThe account."),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The name is null, empty or is not a valid account name."),(0,l.kt)("li",{parentName:"ul"},"The specified account was not found in the wallet."),(0,l.kt)("li",{parentName:"ul"},"The specified application was not found in the wallet."),(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getNextAddress")," \\\nGet the next unused address for a specified account and application in this Wallet within the active CredentialSet. This also updates the index of the next unused address for the account.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"applicationId")," \\\nThe ID of the application that the address ultimately resides in.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: Int32"),(0,l.kt)("li",{parentName:"ul"},"Optional: yes"),(0,l.kt)("li",{parentName:"ul"},"Default: 0"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"accountId")," \\\nThe ID of the account within an application that the address resides in.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: Int32"),(0,l.kt)("li",{parentName:"ul"},"Optional: yes"),(0,l.kt)("li",{parentName:"ul"},"Default: 0"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = ",(0,l.kt)("a",{parentName:"li",href:"#address"},"Address")),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The specified account was not found in the wallet."),(0,l.kt)("li",{parentName:"ul"},"The specified application was not found in the wallet."),(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getAddressByIndex")," \\\nGet the address at an index for a specified account and application in this Wallet within the active CredentialSet.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"index")," \\\nThe index of the address to retrieve",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: Int32"),(0,l.kt)("li",{parentName:"ul"},"Optional: no"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"applicationId")," \\\nThe ID of the application that the address ultimately resides in.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: Int32"),(0,l.kt)("li",{parentName:"ul"},"Optional: yes"),(0,l.kt)("li",{parentName:"ul"},"Default: 0"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"accountId")," \\\nThe ID of the account within an application that the address resides in.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: Int32"),(0,l.kt)("li",{parentName:"ul"},"Optional: yes"),(0,l.kt)("li",{parentName:"ul"},"Default: 0"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = ",(0,l.kt)("a",{parentName:"li",href:"#address"},"Address")),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The index is not in range or invalid"),(0,l.kt)("li",{parentName:"ul"},"The specified account was not found in the wallet."),(0,l.kt)("li",{parentName:"ul"},"The specified application was not found in the wallet."),(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getAddressByValue")," \\\nGet the address using it\u2019s unique Base58 encoded value for a specified account and application in this Wallet within the active CredentialSet.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"address")," \\\nThe Base58 encoded address value",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: base58"),(0,l.kt)("li",{parentName:"ul"},"Optional: no"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"applicationId")," \\\nThe ID of the application that the address ultimately resides in.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: Int32"),(0,l.kt)("li",{parentName:"ul"},"Optional: yes"),(0,l.kt)("li",{parentName:"ul"},"Default: 0"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"accountId")," \\\nThe ID of the account within an application that the address resides in.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: Int32"),(0,l.kt)("li",{parentName:"ul"},"Optional: yes"),(0,l.kt)("li",{parentName:"ul"},"Default: 0"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = ",(0,l.kt)("a",{parentName:"li",href:"#address"},"Address")),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error\nconditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An address with this value does not exist in the account"),(0,l.kt)("li",{parentName:"ul"},"The specified account was not found in the wallet."),(0,l.kt)("li",{parentName:"ul"},"The specified application was not found in the wallet."),(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getAssetLabels")," \\\nReturn asset labels associated with this Wallet within the active CredentialSet.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = A collection of asset labels (String) \\\nThe asset labels associated with this wallet. See the ",(0,l.kt)("a",{parentName:"li",href:"#structure-of-an-asset-label"},"structure of an asset label")," for more information."),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getAddressByAssetLabels")," \\\nGet the addresses (for a specified account and application in this Wallet) with contents that are needed to satisfy desired quantities of assets. The addresses are returned along with it's boxes grouped into three categories; spend, split, and move.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"assetRequests")," \\\nA collection of requests which represent the requirements of desired assets.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: Array of ",(0,l.kt)("a",{parentName:"li",href:"#assetrequest"},"AssetRequest")),(0,l.kt)("li",{parentName:"ul"},"Optional: no"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"applicationId")," \\\nThe ID of the application that the addresses ultimately resides in.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: Int32"),(0,l.kt)("li",{parentName:"ul"},"Optional: yes"),(0,l.kt)("li",{parentName:"ul"},"Default: 0"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"accountId")," \\\nThe ID of the account within an application that the addresses resides in.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: Int32"),(0,l.kt)("li",{parentName:"ul"},"Optional: yes"),(0,l.kt)("li",{parentName:"ul"},"Default: 0"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = Array of ",(0,l.kt)("a",{parentName:"li",href:"#categorizedboxes"},"CategorizedBoxes")),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The specified account was not found in the wallet."),(0,l.kt)("li",{parentName:"ul"},"The specified application was not found in the wallet."),(0,l.kt)("li",{parentName:"ul"},"There is not a combination of boxes that together contain a sufficient quantity."),(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"addAssetType")," \\\nAssociates an asset label with a new human readable label in this Wallet within the active CredentialSet.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"assetType")," \\\nA human readable label to associate with an asset label",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: String"),(0,l.kt)("li",{parentName:"ul"},"Optional: No"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"assetLabel")," \\\nThe asset label that will be associated with the ",(0,l.kt)("inlineCode",{parentName:"li"},"assetType")," label. See the ",(0,l.kt)("a",{parentName:"li",href:"#structure-of-an-asset-label"},"structure of an asset label")," for more information.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: String"),(0,l.kt)("li",{parentName:"ul"},"Optional: No"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> \\\nAn implementation specific value denoting a succesful update is returned."),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"assetType")," is already in use by a different ",(0,l.kt)("inlineCode",{parentName:"li"},"assetLabel")),(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getAssetLabel")," \\\nReturn the asset label associated with a given type in this Wallet within the active CredentialSet.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"assetType")," \\\nA human readable label associated with an asset label",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: String"),(0,l.kt)("li",{parentName:"ul"},"Optional: No"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = String \\\nThe asset label associated with ",(0,l.kt)("inlineCode",{parentName:"li"},"assetType"),". See the ",(0,l.kt)("a",{parentName:"li",href:"#structure-of-an-asset-label"},"structure of an asset label")," for more information."),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"assetType")," does not exist in the wallet"),(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"removeAssetType")," \\\nRemoves the association of a given human readable label from the assete label that it mapped to.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"assetType")," \\\nThe human readable label to remove",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: String"),(0,l.kt)("li",{parentName:"ul"},"Optional: No"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> \\\nAn implementation specific value denoting a succesful update is returned."),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"assetType")," does not exist in the wallet"),(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller.")))))))),(0,l.kt)("h5",{id:"implementation-notes-8"},"Implementation Notes"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"proof"},(0,l.kt)("strong",{parentName:"h4"},"Proof")),(0,l.kt)("p",null,"This interface is defined elsewhere in the brambl library. It is used to prove that signing requirements specified\nby a ",(0,l.kt)("inlineCode",{parentName:"p"},"Proposition")," have been met."),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"proposition"},(0,l.kt)("strong",{parentName:"h4"},"Proposition")),(0,l.kt)("p",null,"This interface is defined elsewhere in the brambl library. It is used to specify the the requirements for spending an\nasset or minting more of an asset."),(0,l.kt)("h3",{id:"blockchain-related-classes"},(0,l.kt)("strong",{parentName:"h3"},"Blockchain-Related Classes")),(0,l.kt)("h4",{id:"assetrequest"},(0,l.kt)("strong",{parentName:"h4"},"AssetRequest")),(0,l.kt)("p",null,"Objects of this type encapsulates a request for a quantity of an asset."),(0,l.kt)("h5",{id:"type-parameters-9"},"Type Parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("h5",{id:"implements-3"},"Implements"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("h5",{id:"constructor-3"},"Constructor"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getAssetLabel")," \\\nThe asset label of the desired asset. See the ",(0,l.kt)("a",{parentName:"li",href:"#structure-of-an-asset-label"},"structure of an asset label")," for more information.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: String"),(0,l.kt)("li",{parentName:"ul"},"Optional: no"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getQuantity")," \\\nThe desired quantity.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: UInt128"),(0,l.kt)("li",{parentName:"ul"},"Optional: yes"),(0,l.kt)("li",{parentName:"ul"},"Default: 0 (denotes all quantity available)")))),(0,l.kt)("h5",{id:"methodsfunctions-9"},"Methods/Functions"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getAssetLabel")," \\\nReturn the asset label associated with this request.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = String \\\nThe asset label. See the ",(0,l.kt)("a",{parentName:"li",href:"#structure-of-an-asset-label"},"structure of an asset label")," for more information."),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getQuantity")," \\\nReturn the quantity associated with this request.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = UInt128 "),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller.")))))))),(0,l.kt)("h5",{id:"implementation-notes-9"},"Implementation Notes"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"categorizedboxes"},(0,l.kt)("strong",{parentName:"h4"},"CategorizedBoxes")),(0,l.kt)("p",null,"Objects of this type encapsulates the result for an asset request. The result represents an ",(0,l.kt)("a",{parentName:"p",href:"#address"},"Address")," mapped to 3 categories of boxes (spend, split, and move)"),(0,l.kt)("h5",{id:"type-parameters-10"},"Type Parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("h5",{id:"implements-4"},"Implements"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("h5",{id:"constructor-4"},"Constructor"),(0,l.kt)("p",null,"The constructor is private or there is none."),(0,l.kt)("h5",{id:"methodsfunctions-10"},"Methods/Functions"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getAddress")," \\\nReturn the address associated with this response.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = ",(0,l.kt)("a",{parentName:"li",href:"#address"},"Address")),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getSpendBoxes")," \\\nReturn the boxes whose entire contents will need to be spent.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = Array of ",(0,l.kt)("a",{parentName:"li",href:"#box"},"Box")," "),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getSplitBoxes")," \\\nReturn the boxes having contents that will need to be split between an amount needed to satisfy the request quantity and the rest of the contents.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = Array of ",(0,l.kt)("a",{parentName:"li",href:"#box"},"Box")," "),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getMoveBoxes")," \\\nReturn the boxes whose entire contents are unneeded to satisfy the request quantity and should be moved to a different address when this address is spent.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = Array of ",(0,l.kt)("a",{parentName:"li",href:"#box"},"Box")," "),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller.")))))))),(0,l.kt)("h5",{id:"implementation-notes-10"},"Implementation Notes"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"box"},(0,l.kt)("strong",{parentName:"h4"},"Box")),(0,l.kt)("p",null,"Objects of this type represent a Box containing assets on the blockchain. A Box is tied to an output of a submitted transaction and can be used as an input to a newly created transaction."),(0,l.kt)("h5",{id:"type-parameters-11"},"Type Parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("h5",{id:"implements-5"},"Implements"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("h5",{id:"constructor-5"},"Constructor"),(0,l.kt)("p",null,"The constructor is private or there is none."),(0,l.kt)("h5",{id:"methodsfunctions-11"},"Methods/Functions"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getId")," \\\nReturn the unique identifier of this box. This ID contains ID of the transaction that output the box and its 0 based index among the outputs.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = Type TBD \\\nA value to identify this box."),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getAssetLabel")," \\\nReturn the asset label denoting the type of assets stored in this box.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = String \\\nThe asset label. See the ",(0,l.kt)("a",{parentName:"li",href:"#structure-of-an-asset-label"},"structure of an asset label")," for more information."),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getQuantity")," \\\nReturn the quantity of the assets that this box contains.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = Int128 \\\nThe quantity of assets contained in this box"),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getStatus")," \\\nReturn the status of this box.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},'S = String \\\nThe status of this box. Possible values include "settled", "pending", and "spent".'),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"setStatus")," \\\nSet the status of this box.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"status"),' \\\nThe new status of this box. Possible values include "settled", "pending", and "spent".',(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: String"),(0,l.kt)("li",{parentName:"ul"},"Optional: no"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value denotes a successful update"),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The provided status was invalid."),(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getSecurityRoot")," \\\nReturn the security root of this box.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = byte32 "),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getSecurityRootAsString")," \\\nReturn the security root of this box translated into the implementation language's native character set.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = String "),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getMetadata")," \\\nReturn the optional metadata of this box.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = byte127 or <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> \\\nIf metadata is not present an implementation specific value denoting nothing is returned."),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getMetadataAsString")," \\\nReturn the optional metadata of this box translated into the implementation language's native character set.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = String or <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> \\\nIf metadata is not present an implementation specific value denoting nothing is returned."),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller.")))))))),(0,l.kt)("h5",{id:"implementation-notes-11"},"Implementation Notes"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"walletfactory"},(0,l.kt)("strong",{parentName:"h4"},"WalletFactory")),(0,l.kt)("p",null,"This is a utility class that is used to create or restore Wallets."),(0,l.kt)("h5",{id:"type-parameters-12"},"Type Parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("h5",{id:"implements-6"},"Implements"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("h5",{id:"constructor-6"},"Constructor"),(0,l.kt)("p",null,"The construct is private or there is none."),(0,l.kt)("h5",{id:"methodsfunctions-12"},"Methods/Functions"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"static createWallet")," \\\nCreate a wallet.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"password")," \\\nA password that is used to encrypt and decrypt the generated Wallet.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: String"),(0,l.kt)("li",{parentName:"ul"},"Optional: no"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"walletPath")," \\\nA path (or name) indicating where to store the wallet contents. This is dependent on the type of wallet store being used. If not provided, a default value is used.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: String"),(0,l.kt)("li",{parentName:"ul"},"Optional: yes"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = An array of strings \\\nThe mnemonic needed to restore the wallet in addition to a code indicating if the wallet was created or if it already existed."),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The specified walletPath is not a valid."),(0,l.kt)("li",{parentName:"ul"},"The specified walletPath already exists but the specified password is invalid for this wallet"),(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller."),(0,l.kt)("li",{parentName:"ul"},"The specified walletPath is invalid for any other reason."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"static openWallet")," \\\nCreate a ",(0,l.kt)("a",{parentName:"li",href:"#wallet"},"Wallet")," object to access the wallet. The wallet must already exist for this to succeed. This opened Wallet is associated to a single CredentialSet",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"password")," \\\nA string used to encrypt and decrypt wallet information",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: String"),(0,l.kt)("li",{parentName:"ul"},"Optional: no"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"walletPath")," \\\nA path (or name) indicating where to retrieve the wallet contents under. This is dependent on the type of wallet store being used. If not provided, the default value will be used.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: String"),(0,l.kt)("li",{parentName:"ul"},"Optional: yes"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = ",(0,l.kt)("a",{parentName:"li",href:"#wallet"},"Wallet")," \\\nThe opened Wallet. "),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"A wallet with the specified walletPath does not exist"),(0,l.kt)("li",{parentName:"ul"},"The wallet exists but the password is not correct"),(0,l.kt)("li",{parentName:"ul"},"The specified walletPath is invalid for any other reason."),(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller.")))))))),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u26a0\ufe0f For the forseeable future we will forget about the transport of data\nWe are assuming the wallet is going to live on disk for the entire time and assume that the user has all the data that they need")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"static restoreWallet"),"\nRestore a wallet from a mnemonic. This effectively recreates and populates the underlying Wallet. This will recreate the derivable wallet contents either generated from the mnemonic or fetched from the blockchain.\nIt is important to note that not all wallet contents are able to be restored. Unrecoverable information includes wallet name, wallet description, application name, account alias names, account description, and address description.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"password")," \\\nA (new) password that is used to encrypt and decrypt the generated Wallet.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: String"),(0,l.kt)("li",{parentName:"ul"},"Optional: no"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"mnemonic")," \\\nAn array of strings that is the mnemonic needed to restore the wallet. This is the value that was returned\nwhen a wallet was created.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: Array of Strings"),(0,l.kt)("li",{parentName:"ul"},"Optional: no"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"walletPath")," \\\nA path (or name) indicating where to store the wallet contents under. This is dependent on the type of Wallet store being used. If not provided, a default value will be used.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Type: String"),(0,l.kt)("li",{parentName:"ul"},"Optional: yes"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value denotes successful restoration"),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"mnemonic is invalid"),(0,l.kt)("li",{parentName:"ul"},"The specified walletPath is not a valid."),(0,l.kt)("li",{parentName:"ul"},"The specified walletPath already exists"),(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller.")))))))),(0,l.kt)("h5",{id:"implementation-notes-12"},"Implementation Notes"),(0,l.kt)("p",null,"It is possible that additional methods will be added to create Wallet objects that correspond to different implementations of the Wallet interfaces."),(0,l.kt)("p",null,"The Wallet implementation class used for the specified methods above will be determined by the runtime environment."),(0,l.kt)("p",null,"Network provider information is configured for an instance of brambl and can be determined by the runtime environment. WalletFactory will use this information to identify a CredentialSet that an open Wallet will use."),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"leveldbwallet"},(0,l.kt)("strong",{parentName:"h4"},"LevelDbWallet")),(0,l.kt)("p",null,"An implementation of the ",(0,l.kt)("a",{parentName:"p",href:"#wallet"},"Wallet")," interface that works with a local LevelDB database."),(0,l.kt)("h5",{id:"type-parameters-13"},"Type Parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("h5",{id:"implements-7"},"Implements"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"#wallet"},"Wallet")),(0,l.kt)("h5",{id:"constructor-7"},"Constructor"),(0,l.kt)("p",null,"The construct is private or there is none."),(0,l.kt)("h5",{id:"methodsfunctions-13"},"Methods/Functions"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"getLocation")," \\\nReturn the path of the local directory storing the files containing the data for this wallet database. The details are implementation specific. This value uniquely identifies a wallet within an environment. It is also always useful in locating the wallet store. "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = String \\\nPath of the directory which stores all the contents of this database"),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller.")))))))),(0,l.kt)("h5",{id:"implementation-notes-13"},"Implementation Notes"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("hr",null),(0,l.kt)("h4",{id:"indexeddbwallet"},(0,l.kt)("strong",{parentName:"h4"},"IndexedDbWallet")),(0,l.kt)("p",null,"An implementation of the ",(0,l.kt)("a",{parentName:"p",href:"#wallet"},"Wallet")," interface that works on a web browser."),(0,l.kt)("h5",{id:"type-parameters-14"},"Type Parameters"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"None")),(0,l.kt)("h5",{id:"implements-8"},"Implements"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"#wallet"},"Wallet")),(0,l.kt)("h5",{id:"constructor-8"},"Constructor"),(0,l.kt)("p",null,"The construct is private or there is none."),(0,l.kt)("h5",{id:"methodsfunctions-14"},"Methods/Functions"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getLocation")," \\\nReturn the path of the local directory storing the files containing the data for this wallet database. This value uniquely identifies a wallet within an environment. It is also always useful in locating the wallet store. ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Parameters")," \\\n",(0,l.kt)("em",{parentName:"li"},"None")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Returns")," \\\n",(0,l.kt)("a",{parentName:"li",href:"#result"},"Result"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S = String \\\nThe unique name identifying this object store in an IndexedDb database."),(0,l.kt)("li",{parentName:"ul"},"F = <",(0,l.kt)("em",{parentName:"li"},"implementation defined"),"> This value should allow the caller to identify these error conditions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An I/O or database error that is unrelated to the parameters passed by the caller.")))))))),(0,l.kt)("h5",{id:"implementation-notes-14"},"Implementation Notes"),(0,l.kt)("p",null,"IndexedDb API 2.0 is a W3C Recommendation (web standard) as of Jan 2018. You can find the\nspec ",(0,l.kt)("a",{parentName:"p",href:"https://www.w3.org/TR/IndexedDB-2/"},"here")),(0,l.kt)("p",null,"IndexedDb API 3.0 is in a working draft state as of July 2022. You can find the\nspec ",(0,l.kt)("a",{parentName:"p",href:"https://www.w3.org/TR/IndexedDB-3/"},"here")),(0,l.kt)("p",null,"An IndexedDb storage has two levels; databases (each with a unique name) may contain many object stores (each with a unique name within the database). For our use case, we will use a single database with many object stores. The term Wallet \u201cdatabase\u201d throughout this spec will refer to an individual object store."),(0,l.kt)("h1",{id:"hiding-nondeterminism"},"Hiding Nondeterminism"),(0,l.kt)("p",null,"One of the design goals of this SDK is to hide the probabilistic nature of the blockchain. We will use the account abstraction to help accomplish this. The following discussion ignores transaction with multi-signature spending propositions."),(0,l.kt)("p",null,"An account is a sequence of addresses. An account has two attributes we will use to reason about non-determinism. These attributes are called ",(0,l.kt)("em",{parentName:"p"},"confidence factor"),", ",(0,l.kt)("em",{parentName:"p"},"threshold confidence factor")," and ",(0,l.kt)("em",{parentName:"p"},"state"),"."),(0,l.kt)("p",null,"The confidence factor is the likelihood that we know the correct outcome of the last transaction posted against an address of the account. For example, if the confidence factor is 1 - 10",(0,l.kt)("sup",null,"-9"),", that means there is only 1 chance in 10",(0,l.kt)("sup",null,"9")," that our knowledge about the outcome of the last transaction posted against the account is wrong. When a transaction has been posted to an account and we know that we do not yet know the outcome of the transaction, the confidence factor is 0."),(0,l.kt)("p",null,"Before any transactions have output any assets to addresses of an account, its confidence factor is 1 because we are certain that the account has no assets. If we are certain that the last transaction posted to an account failed, then the account\u2019s confidence factor is the confidence factor it had before the failed transaction was posted."),(0,l.kt)("p",null,"The SDK gets a value for the confidence factor when it queries Genus to learn the outcome of a posted transaction. Since we can never be entirely certain of a transaction\u2019s success, once we believe that a transaction has been successfully posted to an account its confidence factor will be less than 1."),(0,l.kt)("p",null,"An account\u2019s threshold confidence factor is a value to be compared to the account\u2019s confidence factor. If the confidence factor is greater than the threshold confidence factor, then we will behave as if we were certain of the outcome of the last posted transaction."),(0,l.kt)("p",null,"The outputs of transactions are boxes that contain a quantity of a type of asset. Addresses are associated with a possibly empty set of boxes. It is through their association with boxes that addresses are considered to have assets. It is through addresses that accounts are considered to have assets."),(0,l.kt)("p",null,"The wallet assigns one of these states to each box:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"settled")," \\\nAfter a transaction outputs a box to an address, the box is added to the address in the wallet with\nstatus of ",(0,l.kt)("inlineCode",{parentName:"li"},"settled"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"pendingSpend")," \\\nWhen a transaction is posted to spend a box, the wallet changes the status of the box to ",(0,l.kt)("inlineCode",{parentName:"li"},"pendingSpend"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"spent")," \\\nWhen the wallet learns that a transaction was successful in spending the contents of a box, the status of\nthe box is changed to ",(0,l.kt)("inlineCode",{parentName:"li"},"spent"),". If the transaction does not succeed withing the expected amount of time,\nthe status of the box is changes back to ",(0,l.kt)("inlineCode",{parentName:"li"},"settled"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"surprise"),"\nIn rare circumstance the wallet will discover that the status of a box was incorrectly set to ",(0,l.kt)("inlineCode",{parentName:"li"},"settled"),"\nor ",(0,l.kt)("inlineCode",{parentName:"li"},"spend"),". When this is discovered, the status of the box is set to ",(0,l.kt)("inlineCode",{parentName:"li"},"surprise"),". ")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u26a0\ufe0f What to do about accounts or addresses with a status of ",(0,l.kt)("inlineCode",{parentName:"p"},"surprise")," is an open issue.")),(0,l.kt)("p",null,"For boxes that have a single signature spending proposition, we will normally learn about a surprise when we analyse the results of querying Genus for the outcome of a subsequent transaction."),(0,l.kt)("h1",{id:"genus-api"},"Genus API"),(0,l.kt)("h1",{id:"multi-signature-spending-propositions"},"Multi-Signature Spending Propositions"),(0,l.kt)("p",null,"In the case of multi-signature spending propositions, there are multiple parties that can successfully post a transaction to an account. This will necessitate having a mechanism to coordinate the signing parties in order to know the account\u2019s confidence factor and status."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u26a0\ufe0f The details of coordination for multiple signature spending propositions are currently an open issue.\nThe coordination mechanism will have to allow all parties that can post a transaction to an account to have a consistent value for the account\u2019s confidence factor.")),(0,l.kt)("h1",{id:"implementation-guidelines"},"Implementation Guidelines"),(0,l.kt)("p",null,"Transactions have these size limits:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"data",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"127 Latin-1 characters (also 127 Bytes)"))),(0,l.kt)("li",{parentName:"ul"},"security root",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"64 Bytes")))),(0,l.kt)("p",null,"Note that there exists multiple Base58 standards. Topl uses the same Base58 standard as Bitcoin. More information is documented at ",(0,l.kt)("a",{parentName:"p",href:"https://en.bitcoin.it/wiki/Base58Check_encoding#Base58_symbol_chart"},"Base58Check encoding")),(0,l.kt)("h2",{id:"structure-of-an-asset-label"},"Structure of an Asset Label"),(0,l.kt)("p",null,"An asset label is a string that identifies the type of asset. It has an unambiguous prefix which identifies the type of asset. Current types include Dion (v1 asset) and Tetra (v2 asset)."),(0,l.kt)("p",null,"The structure of the string following the prefix will be dependent on the type of asset label. "),(0,l.kt)("p",null,"Dion asset labels must be 1 to 8 characters long. All characters in the Latin-1 character set."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u26a0\ufe0f The structure of Tetra asset labels is not finalized\nCurrently it is a string with 2 parts, separated by a colon (:). The 2 parts are groupId and seriesId.")),(0,l.kt)("h1",{id:"notes-on-comments"},"Notes on Comments"),(0,l.kt)("p",null,"The markdown contains many lines commented out. These lines refer to topics that we will address at a later time. These topics include:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Credential Sets \\\nCredential sets, for the meantime, will be abstracted away from the client API")))}u.isMDXComponent=!0}}]);