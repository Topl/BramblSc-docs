"use strict";(self.webpackChunksdk_spec=self.webpackChunksdk_spec||[]).push([[950],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),u=o,f=m["".concat(s,".").concat(u)]||m[u]||d[u]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6008:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={},i="getNodeConfig Tests",l={unversionedId:"Modules/Util/NodeUtils/nodecache_tests/getnodeconfig_test",id:"Modules/Util/NodeUtils/nodecache_tests/getnodeconfig_test",title:"getNodeConfig Tests",description:"The following testing scenarios are required:",source:"@site/docs/Modules/Util/NodeUtils/nodecache_tests/getnodeconfig_test.md",sourceDirName:"Modules/Util/NodeUtils/nodecache_tests",slug:"/Modules/Util/NodeUtils/nodecache_tests/getnodeconfig_test",permalink:"/sdk-spec/docs/Modules/Util/NodeUtils/nodecache_tests/getnodeconfig_test",draft:!1,editUrl:"https://github.com/topl/sdk-spec/tree/main/packages/create-docusaurus/templates/shared/docs/Modules/Util/NodeUtils/nodecache_tests/getnodeconfig_test.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"getGenesisBlock Tests",permalink:"/sdk-spec/docs/Modules/Util/NodeUtils/nodecache_tests/getgenesisblock_test"},next:{title:"Slot \u21d4 Timestamp Conversions",permalink:"/sdk-spec/docs/Modules/Util/NodeUtils/slotutil_tests/slot_timestamp_conversion_test"}},s={},c=[{value:"Happy Path",id:"happy-path",level:5},{value:"Error Path",id:"error-path",level:5}],p={toc:c};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"getnodeconfig-tests"},"getNodeConfig Tests"),(0,o.kt)("p",null,"The following testing scenarios are required:"),(0,o.kt)("h5",{id:"happy-path"},"Happy Path"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Given")," that there is an object ",(0,o.kt)("inlineCode",{parentName:"li"},"mockBifrost")," that mocks ",(0,o.kt)("inlineCode",{parentName:"li"},"BifrostQuery.getNodeCache")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"And")," there exists a valid ",(0,o.kt)("inlineCode",{parentName:"li"},"BifrostConnection")," object"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"And")," after calling the ",(0,o.kt)("inlineCode",{parentName:"li"},"NodeCache")," contstructor, the ",(0,o.kt)("inlineCode",{parentName:"li"},"NodeCache")," objects gets a\n",(0,o.kt)("inlineCode",{parentName:"li"},"co.topl.proto.models.node.NodeConfig")," object by calling ",(0,o.kt)("inlineCode",{parentName:"li"},"BifrostQuery.getNodeConfig")," and the returned object is\navailable with the test fram a variable named ",(0,o.kt)("inlineCode",{parentName:"li"},"config"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"When"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"getNodeConfig(mockBifrost, 2000, 18400000)\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Then")," the call returns an object equal to ",(0,o.kt)("inlineCode",{parentName:"li"},"config")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Then")," at least 10 milliseconds elapse"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"When"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"  getNodeConfig(mockBifrost, 100, 1)\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Then")," this method calls the mocked ",(0,o.kt)("inlineCode",{parentName:"li"},"BifrostQuery.getNodeCache")," with a ",(0,o.kt)("inlineCode",{parentName:"li"},"timeoutMillis")," value of 100"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Then")," the call returns the ",(0,o.kt)("inlineCode",{parentName:"li"},"co.topl.proto.models.node.NodeConfig")," object it just got from the\nmocked ",(0,o.kt)("inlineCode",{parentName:"li"},"BifrostQuery.getNodeCache"))),(0,o.kt)("h5",{id:"error-path"},"Error Path"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Given")," that there is an object ",(0,o.kt)("inlineCode",{parentName:"li"},"mockBifrost")," that mocks ",(0,o.kt)("inlineCode",{parentName:"li"},"BifrostQuery.getNodeCache")," and simulates an error from the\nBifrost node"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"And")," at least 10 milliseconds have elapsed"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"When"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"getNodeConfig(mockBifrost, 2000, 1)\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Then")," ",(0,o.kt)("inlineCode",{parentName:"li"},"getNodeConfig")," produces the same error as is produced by the mocked ",(0,o.kt)("inlineCode",{parentName:"li"},"BifrostQuery.getNodeCache"),".")))}d.isMDXComponent=!0}}]);