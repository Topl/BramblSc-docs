"use strict";(self.webpackChunksdk_spec=self.webpackChunksdk_spec||[]).push([[7301],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>h});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},s=Object.keys(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),c=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},i={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,s=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=c(r),h=n,b=d["".concat(p,".").concat(h)]||d[h]||i[h]||s;return r?a.createElement(b,l(l({ref:t},u),{},{components:r})):a.createElement(b,l({ref:t},u))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=r.length,l=new Array(s);l[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var c=2;c<s;c++)l[c]=r[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2383:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>i,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var a=r(7462),n=(r(7294),r(3905));const s={},l="Blake2b256 Tests",o={unversionedId:"Modules/Crypto/Hash/Hash Tests/Blake2b256Tests",id:"Modules/Crypto/Hash/Hash Tests/Blake2b256Tests",title:"Blake2b256 Tests",description:"For testing the Blake2b256 class, the following happy path scenario is all that is required. Note that for",source:"@site/docs/Modules/Crypto/Hash/Hash Tests/Blake2b256Tests.md",sourceDirName:"Modules/Crypto/Hash/Hash Tests",slug:"/Modules/Crypto/Hash/Hash Tests/Blake2b256Tests",permalink:"/sdk-spec/docs/Modules/Crypto/Hash/Hash Tests/Blake2b256Tests",draft:!1,editUrl:"https://github.com/topl/sdk-spec/tree/main/packages/create-docusaurus/templates/shared/docs/Modules/Crypto/Hash/Hash Tests/Blake2b256Tests.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Hash",permalink:"/sdk-spec/docs/Modules/Crypto/Hash/"},next:{title:"Blake2b512 Tests",permalink:"/sdk-spec/docs/Modules/Crypto/Hash/Hash Tests/Blake2b512Tests"}},p={},c=[],u={toc:c};function i(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"blake2b256-tests"},"Blake2b256 Tests"),(0,n.kt)("p",null,"For testing the Blake2b256 class, the following happy path scenario is all that is required. Note that for\nimplementation languages that do not support repeating parameters, the argument should be wrapped in a ",(0,n.kt)("inlineCode",{parentName:"p"},"List"),"."),(0,n.kt)("p",null,"Given"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"b256 = Blake2b256()\n")),(0,n.kt)("p",null,"When"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'testHash = b256.hash("test")\n')),(0,n.kt)("p",null,"Then"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'testHash == "928b20366943e2afd11ebc0eae2e53a93bf177a4fcf35bcc64d503704e65e202"\n')),(0,n.kt)("p",null,"When"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'toplHash = b256.hash("topl")\n')),(0,n.kt)("p",null,"Then"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'toplHash == "c39310192260edc08a5fde86b81068055ea63571dbcfdcb40c533fba2d1e6d9e"\n')),(0,n.kt)("p",null,"When"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'scalaHash = b256.hash("scala")\n')),(0,n.kt)("p",null,"Then"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'scalaHash == "c7170ce5f424098943d56d421b5bb731cf28701c79158fc6c168968ba004c0d0"\n')),(0,n.kt)("p",null,"When"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'blankHash = b256.hash("")\n')),(0,n.kt)("p",null,"Then"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'blankHash == "0e5751c026e543b2e8ab2eb06099daa1d1e5df47778f7787faab45cdf12fe3a8"\n')))}i.isMDXComponent=!0}}]);