"use strict";(self.webpackChunksdk_spec=self.webpackChunksdk_spec||[]).push([[254],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(r),m=o,k=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return r?n.createElement(k,i(i({ref:t},p),{},{components:r})):n.createElement(k,i({ref:t},p))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},5213:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const a={},i="getGenesisBlock Tests",l={unversionedId:"Modules/Util/NodeUtils/NodeCache Tests/getgenesisblock_test",id:"Modules/Util/NodeUtils/NodeCache Tests/getgenesisblock_test",title:"getGenesisBlock Tests",description:"The following testing scenarios are required:",source:"@site/docs/Modules/Util/NodeUtils/NodeCache Tests/getgenesisblock_test.md",sourceDirName:"Modules/Util/NodeUtils/NodeCache Tests",slug:"/Modules/Util/NodeUtils/NodeCache Tests/getgenesisblock_test",permalink:"/sdk-spec/docs/Modules/Util/NodeUtils/NodeCache Tests/getgenesisblock_test",draft:!1,editUrl:"https://github.com/topl/sdk-spec/tree/main/packages/create-docusaurus/templates/shared/docs/Modules/Util/NodeUtils/NodeCache Tests/getgenesisblock_test.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"NodeCache Constructor Test",permalink:"/sdk-spec/docs/Modules/Util/NodeUtils/NodeCache Tests/constructor_test"},next:{title:"getNodeConfig Tests",permalink:"/sdk-spec/docs/Modules/Util/NodeUtils/NodeCache Tests/getnodeconfig_test"}},s={},c=[{value:"Happy Path",id:"happy-path",level:5},{value:"Error Path",id:"error-path",level:5}],p={toc:c};function d(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"getgenesisblock-tests"},"getGenesisBlock Tests"),(0,o.kt)("p",null,"The following testing scenarios are required:"),(0,o.kt)("h5",{id:"happy-path"},"Happy Path"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Given")," that there is an object ",(0,o.kt)("inlineCode",{parentName:"li"},"mockBifrost")," that mocks ",(0,o.kt)("inlineCode",{parentName:"li"},"BifrostQuery.getNodeCache")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"And")," there exists a valid ",(0,o.kt)("inlineCode",{parentName:"li"},"BifrostConnection")," object"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"And")," after calling the ",(0,o.kt)("inlineCode",{parentName:"li"},"NodeCache")," constructor, the ",(0,o.kt)("inlineCode",{parentName:"li"},"NodeCache")," objects gets a\n",(0,o.kt)("inlineCode",{parentName:"li"},"co.topl.proto.models.FullBlock")," object by calling ",(0,o.kt)("inlineCode",{parentName:"li"},"BifrostQuery.getBlockByHeight(1)"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"When"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"getGenesisBlock()\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Then")," the call returns an ",(0,o.kt)("inlineCode",{parentName:"li"},"FullBlock")," object that was previously obtained from ",(0,o.kt)("inlineCode",{parentName:"li"},"BifrostQuery.getBlockByHeight(1)"),".")),(0,o.kt)("h5",{id:"error-path"},"Error Path"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Given")," that there is an object ",(0,o.kt)("inlineCode",{parentName:"li"},"mockBifrost")," that mocks ",(0,o.kt)("inlineCode",{parentName:"li"},"BifrostQuery.getBlockByHeight(1)")," and simulates an error from the\nBifrost node"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"When"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"getGenesisBlock(mockBifrost, 2000, 1)\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Then")," ",(0,o.kt)("inlineCode",{parentName:"li"},"getNodeConfig")," produces the same error as is produced by the mocked ",(0,o.kt)("inlineCode",{parentName:"li"},"BifrostQuery.getBlockByHeight(1)"),".")))}d.isMDXComponent=!0}}]);