"use strict";(self.webpackChunksdk_spec=self.webpackChunksdk_spec||[]).push([[8194],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>c});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var o=n.createContext({}),u=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),k=u(r),c=i,m=k["".concat(o,".").concat(c)]||k[c]||d[c]||a;return r?n.createElement(m,l(l({ref:t},p),{},{components:r})):n.createElement(m,l({ref:t},p))}));function c(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,l=new Array(a);l[0]=k;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:i,l[1]=s;for(var u=2;u<a;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}k.displayName="MDXCreateElement"},9830:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var n=r(7462),i=(r(7294),r(3905));const a={},l="ByteVector",s={unversionedId:"Modules/Common/External Libraries/ByteVector/ByteVector",id:"Modules/Common/External Libraries/ByteVector/ByteVector",title:"ByteVector",description:"This page describes a data type named ByteVector that is used in the Brambl SDK for some of its methods/functions.",source:"@site/docs/Modules/Common/External Libraries/ByteVector/ByteVector.md",sourceDirName:"Modules/Common/External Libraries/ByteVector",slug:"/Modules/Common/External Libraries/ByteVector/",permalink:"/sdk-spec/docs/Modules/Common/External Libraries/ByteVector/",draft:!1,editUrl:"https://github.com/topl/sdk-spec/tree/main/packages/create-docusaurus/templates/shared/docs/Modules/Common/External Libraries/ByteVector/ByteVector.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"External Libraries",permalink:"/sdk-spec/docs/Modules/Common/External Libraries/"},next:{title:"Models",permalink:"/sdk-spec/docs/Modules/Common/Models/"}},o={},u=[{value:"Interface ByteVector",id:"interface-bytevector",level:2},{value:"size",id:"size",level:3},{value:"Signature(s)",id:"signatures",level:4},{value:"Description",id:"description",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Errors",id:"errors",level:4},{value:"isEmpty",id:"isempty",level:3},{value:"Signature(s)",id:"signatures-1",level:4},{value:"Description",id:"description-1",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Errors",id:"errors-1",level:4},{value:"nonEmpty",id:"nonempty",level:3},{value:"Signature(s)",id:"signatures-2",level:4},{value:"Description",id:"description-2",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Errors",id:"errors-2",level:4},{value:"get",id:"get",level:3},{value:"Signature(s)",id:"signatures-3",level:4},{value:"Description",id:"description-3",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Errors",id:"errors-3",level:4},{value:"update",id:"update",level:3},{value:"Signature(s)",id:"signatures-4",level:4},{value:"Description",id:"description-4",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Errors",id:"errors-4",level:4},{value:"insert",id:"insert",level:3},{value:"Signature(s)",id:"signatures-5",level:4},{value:"Description",id:"description-5",level:4},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Errors",id:"errors-5",level:4},{value:"splice",id:"splice",level:3},{value:"Signature(s)",id:"signatures-6",level:4},{value:"Description",id:"description-6",level:4},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Errors",id:"errors-6",level:4},{value:"patch",id:"patch",level:3},{value:"Signature(s)",id:"signatures-7",level:4},{value:"Description",id:"description-7",level:4},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Errors",id:"errors-7",level:4},{value:"concatenate",id:"concatenate",level:3},{value:"Signature(s)",id:"signatures-8",level:4},{value:"Description",id:"description-8",level:4},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Errors",id:"errors-8",level:4},{value:"append",id:"append",level:3},{value:"Signature(s)",id:"signatures-9",level:4},{value:"Description",id:"description-9",level:4},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Errors",id:"errors-9",level:4},{value:"prepend",id:"prepend",level:3},{value:"Signature(s)",id:"signatures-10",level:4},{value:"Description",id:"description-10",level:4},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Errors",id:"errors-10",level:4},{value:"drop",id:"drop",level:3},{value:"Signature(s)",id:"signatures-11",level:4},{value:"Description",id:"description-11",level:4},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Errors",id:"errors-11",level:4},{value:"dropRight",id:"dropright",level:3},{value:"Signature(s)",id:"signatures-12",level:4},{value:"Description",id:"description-12",level:4},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Errors",id:"errors-12",level:4},{value:"dropWhile",id:"dropwhile",level:3},{value:"Signature(s)",id:"signatures-13",level:4},{value:"Description",id:"description-13",level:4},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-13",level:4},{value:"Errors",id:"errors-13",level:4},{value:"take",id:"take",level:3},{value:"Signature(s)",id:"signatures-14",level:4},{value:"Description",id:"description-14",level:4},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-14",level:4},{value:"Errors",id:"errors-14",level:4},{value:"takeRight",id:"takeright",level:3},{value:"Signature(s)",id:"signatures-15",level:4},{value:"Description",id:"description-15",level:4},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-15",level:4},{value:"Errors",id:"errors-15",level:4},{value:"takeWhile",id:"takewhile",level:3},{value:"Signature(s)",id:"signatures-16",level:4},{value:"Description",id:"description-16",level:4},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-16",level:4},{value:"Errors",id:"errors-16",level:4},{value:"splitAt",id:"splitat",level:3},{value:"Signature(s)",id:"signatures-17",level:4},{value:"Description",id:"description-17",level:4},{value:"Parameters",id:"parameters-17",level:4},{value:"Returns",id:"returns-17",level:4},{value:"Errors",id:"errors-17",level:4},{value:"slice",id:"slice",level:3},{value:"Signature(s)",id:"signatures-18",level:4},{value:"Description",id:"description-18",level:4},{value:"Parameters",id:"parameters-18",level:4},{value:"Returns",id:"returns-18",level:4},{value:"Errors",id:"errors-18",level:4},{value:"acquire",id:"acquire",level:3},{value:"Signature(s)",id:"signatures-19",level:4},{value:"Description",id:"description-19",level:4},{value:"Parameters",id:"parameters-19",level:4},{value:"Returns",id:"returns-19",level:4},{value:"Errors",id:"errors-19",level:4},{value:"consume",id:"consume",level:3},{value:"Signature(s)",id:"signatures-20",level:4},{value:"Description",id:"description-20",level:4},{value:"Parameters",id:"parameters-20",level:4},{value:"Returns",id:"returns-20",level:4},{value:"Errors",id:"errors-20",level:4},{value:"foreach",id:"foreach",level:3},{value:"Signature(s)",id:"signatures-21",level:4},{value:"Description",id:"description-21",level:4},{value:"Parameters",id:"parameters-21",level:4},{value:"Returns",id:"returns-21",level:4},{value:"Errors",id:"errors-21",level:4},{value:"startsWith",id:"startswith",level:3},{value:"Signature(s)",id:"signatures-22",level:4},{value:"Description",id:"description-22",level:4},{value:"Parameters",id:"parameters-22",level:4},{value:"Returns",id:"returns-22",level:4},{value:"Errors",id:"errors-22",level:4},{value:"endsWith",id:"endswith",level:3},{value:"Signature(s)",id:"signatures-23",level:4},{value:"Description",id:"description-23",level:4},{value:"Parameters",id:"parameters-23",level:4},{value:"Returns",id:"returns-23",level:4},{value:"Errors",id:"errors-23",level:4},{value:"indexOfSlice",id:"indexofslice",level:3},{value:"Signature(s)",id:"signatures-24",level:4},{value:"Description",id:"description-24",level:4},{value:"Parameters",id:"parameters-24",level:4},{value:"Returns",id:"returns-24",level:4},{value:"Errors",id:"errors-24",level:4},{value:"containsSlice",id:"containsslice",level:3},{value:"Signature(s)",id:"signatures-25",level:4},{value:"Description",id:"description-25",level:4},{value:"Parameters",id:"parameters-25",level:4},{value:"Returns",id:"returns-25",level:4},{value:"Errors",id:"errors-25",level:4},{value:"head",id:"head",level:3},{value:"Signature(s)",id:"signatures-26",level:4},{value:"Description",id:"description-26",level:4},{value:"Parameters",id:"parameters-26",level:4},{value:"Returns",id:"returns-26",level:4},{value:"Errors",id:"errors-26",level:4},{value:"headOption",id:"headoption",level:3},{value:"Signature(s)",id:"signatures-27",level:4},{value:"Description",id:"description-27",level:4},{value:"Parameters",id:"parameters-27",level:4},{value:"Returns",id:"returns-27",level:4},{value:"Errors",id:"errors-27",level:4},{value:"tail",id:"tail",level:3},{value:"Signature(s)",id:"signatures-28",level:4},{value:"Description",id:"description-28",level:4},{value:"Parameters",id:"parameters-28",level:4},{value:"Returns",id:"returns-28",level:4},{value:"Errors",id:"errors-28",level:4},{value:"init",id:"init",level:3},{value:"Signature(s)",id:"signatures-29",level:4},{value:"Description",id:"description-29",level:4},{value:"Parameters",id:"parameters-29",level:4},{value:"Returns",id:"returns-29",level:4},{value:"Errors",id:"errors-29",level:4},{value:"last",id:"last",level:3},{value:"Signature(s)",id:"signatures-30",level:4},{value:"Description",id:"description-30",level:4},{value:"Parameters",id:"parameters-30",level:4},{value:"Returns",id:"returns-30",level:4},{value:"Errors",id:"errors-30",level:4},{value:"tailOption",id:"tailoption",level:3},{value:"Signature(s)",id:"signatures-31",level:4},{value:"Description",id:"description-31",level:4},{value:"Parameters",id:"parameters-31",level:4},{value:"Returns",id:"returns-31",level:4},{value:"Errors",id:"errors-31",level:4},{value:"padRight",id:"padright",level:3},{value:"Signature(s)",id:"signatures-32",level:4},{value:"Description",id:"description-32",level:4},{value:"Parameters",id:"parameters-32",level:4},{value:"Returns",id:"returns-32",level:4},{value:"Errors",id:"errors-32",level:4},{value:"padLeft",id:"padleft",level:3},{value:"Signature(s)",id:"signatures-33",level:4},{value:"Description",id:"description-33",level:4},{value:"Parameters",id:"parameters-33",level:4},{value:"Returns",id:"returns-33",level:4},{value:"Errors",id:"errors-33",level:4},{value:"map",id:"map",level:3},{value:"Signature(s)",id:"signatures-34",level:4},{value:"Description",id:"description-34",level:4},{value:"Parameters",id:"parameters-34",level:4},{value:"Returns",id:"returns-34",level:4},{value:"Errors",id:"errors-34",level:4},{value:"reverse",id:"reverse",level:3},{value:"Signature(s)",id:"signatures-35",level:4},{value:"Description",id:"description-35",level:4},{value:"Parameters",id:"parameters-35",level:4},{value:"Returns",id:"returns-35",level:4},{value:"Errors",id:"errors-35",level:4},{value:"shiftLeft",id:"shiftleft",level:3},{value:"Signature(s)",id:"signatures-36",level:4},{value:"Description",id:"description-36",level:4},{value:"Parameters",id:"parameters-36",level:4},{value:"Returns",id:"returns-36",level:4},{value:"Errors",id:"errors-36",level:4},{value:"shiftRight",id:"shiftright",level:3},{value:"Signature(s)",id:"signatures-37",level:4},{value:"Description",id:"description-37",level:4},{value:"Parameters",id:"parameters-37",level:4},{value:"Returns",id:"returns-37",level:4},{value:"Errors",id:"errors-37",level:4},{value:"rotateLeft",id:"rotateleft",level:3},{value:"Signature(s)",id:"signatures-38",level:4},{value:"Description",id:"description-38",level:4},{value:"Parameters",id:"parameters-38",level:4},{value:"Returns",id:"returns-38",level:4},{value:"Errors",id:"errors-38",level:4},{value:"rotateRight",id:"rotateright",level:3},{value:"Signature(s)",id:"signatures-39",level:4},{value:"Description",id:"description-39",level:4},{value:"Parameters",id:"parameters-39",level:4},{value:"Returns",id:"returns-39",level:4},{value:"Errors",id:"errors-39",level:4},{value:"compact",id:"compact",level:3},{value:"Signature(s)",id:"signatures-40",level:4},{value:"Description",id:"description-40",level:4},{value:"Parameters",id:"parameters-40",level:4},{value:"Returns",id:"returns-40",level:4},{value:"Errors",id:"errors-40",level:4},{value:"partialCompact",id:"partialcompact",level:3},{value:"Signature(s)",id:"signatures-41",level:4},{value:"Description",id:"description-41",level:4},{value:"Parameters",id:"parameters-41",level:4},{value:"Returns",id:"returns-41",level:4},{value:"Errors",id:"errors-41",level:4},{value:"copy",id:"copy",level:3},{value:"Signature(s)",id:"signatures-42",level:4},{value:"Description",id:"description-42",level:4},{value:"Parameters",id:"parameters-42",level:4},{value:"Returns",id:"returns-42",level:4},{value:"Errors",id:"errors-42",level:4},{value:"toArray",id:"toarray",level:3},{value:"Signature(s)",id:"signatures-43",level:4},{value:"Description",id:"description-43",level:4},{value:"Parameters",id:"parameters-43",level:4},{value:"Returns",id:"returns-43",level:4},{value:"Errors",id:"errors-43",level:4},{value:"copyToArray",id:"copytoarray",level:3},{value:"Signature(s)",id:"signatures-44",level:4},{value:"Description",id:"description-44",level:4},{value:"Parameters",id:"parameters-44",level:4},{value:"Returns",id:"returns-44",level:4},{value:"Errors",id:"errors-44",level:4},{value:"toHex",id:"tohex",level:3},{value:"Signature(s)",id:"signatures-45",level:4},{value:"Description",id:"description-45",level:4},{value:"Parameters",id:"parameters-45",level:4},{value:"Returns",id:"returns-45",level:4},{value:"Errors",id:"errors-45",level:4},{value:"hashCode",id:"hashcode",level:3},{value:"Signature(s)",id:"signatures-46",level:4},{value:"Description",id:"description-46",level:4},{value:"Parameters",id:"parameters-46",level:4},{value:"Returns",id:"returns-46",level:4},{value:"Errors",id:"errors-46",level:4},{value:"equals",id:"equals",level:3},{value:"Signature(s)",id:"signatures-47",level:4},{value:"Description",id:"description-47",level:4},{value:"Parameters",id:"parameters-47",level:4},{value:"Returns",id:"returns-47",level:4},{value:"Errors",id:"errors-47",level:4},{value:"size",id:"size-1",level:3},{value:"Signature(s)",id:"signatures-48",level:4},{value:"Description",id:"description-48",level:4},{value:"Parameters",id:"parameters-48",level:4},{value:"Returns",id:"returns-48",level:4},{value:"Errors",id:"errors-48",level:4}],p={toc:u};function d(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"bytevector"},"ByteVector"),(0,i.kt)("p",null,"This page describes a data type named ",(0,i.kt)("inlineCode",{parentName:"p"},"ByteVector")," that is used in the Brambl SDK for some of its methods/functions."),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"ByteVector")," object is an immutable vector of bytes, backed by a balanced binary tree of chunks. Most operations are\nlogarithmic in the depth of this tree, including ++, :+, +:, update, and insert. Where possible, operations return lazy\nviews rather than copying any underlying bytes. Use copy to copy all underlying bytes to a fresh, array-backed\nByteVector."),(0,i.kt)("h2",{id:"interface-bytevector"},"Interface ByteVector"),(0,i.kt)("p",null,"This class is responsible for hashing data using the Blake2b-256 algorithm. It can be implemented as a thin wrapper\naround the Blake2b-256 algorithm provided by a library for the implementation language."),(0,i.kt)("h3",{id:"size"},"size"),(0,i.kt)("h4",{id:"signatures"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"size() returns Long\n")),(0,i.kt)("h4",{id:"description"},"Description"),(0,i.kt)("p",null,"Returns the number of bytes in this ",(0,i.kt)("inlineCode",{parentName:"p"},"ByteVector"),"."),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,"Returns the number of bytes in this ",(0,i.kt)("inlineCode",{parentName:"p"},"ByteVector"),"."),(0,i.kt)("h4",{id:"errors"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"isempty"},"isEmpty"),(0,i.kt)("h4",{id:"signatures-1"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"isEmpty() returns Boolean\n")),(0,i.kt)("h4",{id:"description-1"},"Description"),(0,i.kt)("p",null,"Returns true if this vector has no bytes."),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,"Returns true if this vector has no bytes."),(0,i.kt)("h4",{id:"errors-1"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"nonempty"},"nonEmpty"),(0,i.kt)("h4",{id:"signatures-2"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"nonEmpty() returns Boolean\n")),(0,i.kt)("h4",{id:"description-2"},"Description"),(0,i.kt)("p",null,"Returns true if this vector has a non-zero number of bytes."),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,"Returns true if this vector has a non-zero number of bytes."),(0,i.kt)("h4",{id:"errors-2"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"get"},"get"),(0,i.kt)("h4",{id:"signatures-3"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"get(index: Long) returns Byte\n")),(0,i.kt)("h4",{id:"description-3"},"Description"),(0,i.kt)("p",null,"Gets the byte at the specified index."),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"index")," \u2014 The index of the byte to get.")),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,"Returns the byte at the specified index."),(0,i.kt)("h4",{id:"errors-3"},"Errors"),(0,i.kt)("p",null,"Signals an error if the index is out of bounds (<0 or >= size)."),(0,i.kt)("h3",{id:"update"},"update"),(0,i.kt)("h4",{id:"signatures-4"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"update(idx: Long, b: Byte) returns ByteVector\n")),(0,i.kt)("h4",{id:"description-4"},"Description"),(0,i.kt)("p",null,"Create a vector with the byte at the specified index replaced with the specified byte."),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"idx")," \u2014 The index of the byte to replace."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"b")," \u2014 The byte to replace the byte at the specified index with.")),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,"The updated vector."),(0,i.kt)("h4",{id:"errors-4"},"Errors"),(0,i.kt)("p",null,"Signals an error if the index is out of bounds (<0 or >= size)."),(0,i.kt)("h3",{id:"insert"},"insert"),(0,i.kt)("h4",{id:"signatures-5"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"insert(idx: Long, b: Byte) returns ByteVector\n")),(0,i.kt)("h4",{id:"description-5"},"Description"),(0,i.kt)("p",null,"Returns a vector with the specified byte inserted at the specified index."),(0,i.kt)("h4",{id:"parameters-5"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"idx")," \u2014 The index at which to insert the byte."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"b")," \u2014 The byte to insert.")),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,"Returns a new ",(0,i.kt)("inlineCode",{parentName:"p"},"ByteVector")," with the insertion."),(0,i.kt)("h4",{id:"errors-5"},"Errors"),(0,i.kt)("p",null,"Signals an error if the index is out of bounds (<0 or >= size)."),(0,i.kt)("h3",{id:"splice"},"splice"),(0,i.kt)("h4",{id:"signatures-6"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"splice(idx: Long, b: ByteVector) returns ByteVector\n")),(0,i.kt)("h4",{id:"description-6"},"Description"),(0,i.kt)("p",null,"Returns a vector with the specified byte vector inserted at the specified index."),(0,i.kt)("h4",{id:"parameters-6"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"idx")," \u2014 The index at which to insert the byte vector."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"b")," ",(0,i.kt)("inlineCode",{parentName:"li"},"ByteVector")," \u2014 The byte vector to insert.")),(0,i.kt)("h4",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,"Returns a new ",(0,i.kt)("inlineCode",{parentName:"p"},"ByteVector")," with the insertion."),(0,i.kt)("h4",{id:"errors-6"},"Errors"),(0,i.kt)("p",null,"Signals an error if the index is out of bounds (<0 or >= size)."),(0,i.kt)("h3",{id:"patch"},"patch"),(0,i.kt)("h4",{id:"signatures-7"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"patch(idx: Long, b: ByteVector) returns ByteVector\n")),(0,i.kt)("h4",{id:"description-7"},"Description"),(0,i.kt)("p",null,"Returns a vector with the specified byte vector replacing bytes ",(0,i.kt)("inlineCode",{parentName:"p"},"idx")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"idx + b.size"),"."),(0,i.kt)("h4",{id:"parameters-7"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"idx")," \u2014 The index at which to replace the byte vector."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"b")," ",(0,i.kt)("inlineCode",{parentName:"li"},"ByteVector")," \u2014 The byte vector to replace the existing bytes.")),(0,i.kt)("h4",{id:"returns-7"},"Returns"),(0,i.kt)("p",null,"Returns a new ",(0,i.kt)("inlineCode",{parentName:"p"},"ByteVector")," with the replacement."),(0,i.kt)("h4",{id:"errors-7"},"Errors"),(0,i.kt)("p",null,"Signals an error if the index is out of bounds (<0 or >= size)."),(0,i.kt)("h3",{id:"concatenate"},"concatenate"),(0,i.kt)("h4",{id:"signatures-8"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"concatenate(other: ByteVector) returns ByteVector\n")),(0,i.kt)("h4",{id:"description-8"},"Description"),(0,i.kt)("p",null,"Returns a new byte vector representing this vector's contents followed by the specified vector's contents."),(0,i.kt)("h4",{id:"parameters-8"},"Parameters"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h4",{id:"returns-8"},"Returns"),(0,i.kt)("p",null,"Returns a new byte vector representing this vector's contents followed by the specified vector's contents."),(0,i.kt)("h4",{id:"errors-8"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"append"},"append"),(0,i.kt)("h4",{id:"signatures-9"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"append(other: Byte) returns ByteVector\n")),(0,i.kt)("h4",{id:"description-9"},"Description"),(0,i.kt)("p",null,"Returns a new byte vector representing this vector's contents followed by the specified byte."),(0,i.kt)("h4",{id:"parameters-9"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"other")," \u2014 The byte to append to this vector.")),(0,i.kt)("h4",{id:"returns-9"},"Returns"),(0,i.kt)("p",null,"Returns a new byte vector representing this vector's contents followed by the specified byte."),(0,i.kt)("h4",{id:"errors-9"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"prepend"},"prepend"),(0,i.kt)("h4",{id:"signatures-10"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"prepend(other: Byte) returns ByteVector\n")),(0,i.kt)("h4",{id:"description-10"},"Description"),(0,i.kt)("p",null,"Returns a new byte vector representing this vector's contents preceded by the specified byte."),(0,i.kt)("h4",{id:"parameters-10"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"other")," \u2014 The byte to prepend to this vector.")),(0,i.kt)("h4",{id:"returns-10"},"Returns"),(0,i.kt)("p",null,"Returns a new byte vector representing this vector's contents preceded by the specified byte."),(0,i.kt)("h4",{id:"errors-10"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"drop"},"drop"),(0,i.kt)("h4",{id:"signatures-11"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"drop(n: Long) returns ByteVector\n")),(0,i.kt)("h4",{id:"description-11"},"Description"),(0,i.kt)("p",null,"Returns a vector of all bytes in this vector except the first n bytes.\nThe resulting vector's size is ",(0,i.kt)("inlineCode",{parentName:"p"},"max(0, size - n)"),"."),(0,i.kt)("h4",{id:"parameters-11"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"n")," \u2014 The number of bytes to drop from the beginning of this vector. Negative values are treated as 0.")),(0,i.kt)("h4",{id:"returns-11"},"Returns"),(0,i.kt)("p",null,"Returns the new ",(0,i.kt)("inlineCode",{parentName:"p"},"ByteVector"),"."),(0,i.kt)("h4",{id:"errors-11"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"dropright"},"dropRight"),(0,i.kt)("h4",{id:"signatures-12"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"dropRight(n: Long) returns ByteVector\n")),(0,i.kt)("h4",{id:"description-12"},"Description"),(0,i.kt)("p",null,"Returns a vector of all bytes in this vector except the last n bytes.\nThe resulting vector's size is ",(0,i.kt)("inlineCode",{parentName:"p"},"max(0, size - n)"),"."),(0,i.kt)("h4",{id:"parameters-12"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"n")," \u2014 The number of bytes to drop from the end of this vector. Negative values are treated as 0.")),(0,i.kt)("h4",{id:"returns-12"},"Returns"),(0,i.kt)("p",null,"Returns the new ",(0,i.kt)("inlineCode",{parentName:"p"},"ByteVector"),"."),(0,i.kt)("h4",{id:"errors-12"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"dropwhile"},"dropWhile"),(0,i.kt)("h4",{id:"signatures-13"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"dropWhile(f: (Byte) returns Boolean) returns ByteVector\n")),(0,i.kt)("h4",{id:"description-13"},"Description"),(0,i.kt)("p",null,"Drops the longest prefix of this vector such that every byte of the prefix satisfies the specific predicate."),(0,i.kt)("h4",{id:"parameters-13"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"f")," \u2014 The predicate used to test bytes. This is a function that takes a byte and returns a boolean.")),(0,i.kt)("h4",{id:"returns-13"},"Returns"),(0,i.kt)("p",null,"Returns the new ",(0,i.kt)("inlineCode",{parentName:"p"},"ByteVector"),"."),(0,i.kt)("h4",{id:"errors-13"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"take"},"take"),(0,i.kt)("h4",{id:"signatures-14"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"take(n: Long) returns ByteVector\n")),(0,i.kt)("h4",{id:"description-14"},"Description"),(0,i.kt)("p",null,"Returns a vector of the first n bytes of this vector.\nThe resulting vector's size is ",(0,i.kt)("inlineCode",{parentName:"p"},"min(n, size)"),"."),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Note"),": if an exactly n-byte vector is required, use the acquire method instead."),(0,i.kt)("h4",{id:"parameters-14"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"n")," \u2014 The number of bytes to take from the beginning of this vector. Negative values are treated as 0.")),(0,i.kt)("h4",{id:"returns-14"},"Returns"),(0,i.kt)("p",null,"Returns the new ",(0,i.kt)("inlineCode",{parentName:"p"},"ByteVector"),"."),(0,i.kt)("h4",{id:"errors-14"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"takeright"},"takeRight"),(0,i.kt)("h4",{id:"signatures-15"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"takeRight(n: Long) returns ByteVector\n")),(0,i.kt)("h4",{id:"description-15"},"Description"),(0,i.kt)("p",null,"Returns a vector of the last n bytes of this vector.\nThe resulting vector's size is ",(0,i.kt)("inlineCode",{parentName:"p"},"min(n, size)"),"."),(0,i.kt)("h4",{id:"parameters-15"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"n")," \u2014 The number of bytes to take from the end of this vector. Negative values are treated as 0.")),(0,i.kt)("h4",{id:"returns-15"},"Returns"),(0,i.kt)("p",null,"Returns the new ",(0,i.kt)("inlineCode",{parentName:"p"},"ByteVector"),"."),(0,i.kt)("h4",{id:"errors-15"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"takewhile"},"takeWhile"),(0,i.kt)("h4",{id:"signatures-16"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"takeWhile(f: (Byte) returns Boolean) returns ByteVector\n")),(0,i.kt)("h4",{id:"description-16"},"Description"),(0,i.kt)("p",null,"Returns the longest prefix of this vector such that every byte of the prefix satisfies the specific predicate."),(0,i.kt)("h4",{id:"parameters-16"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"f")," \u2014 The predicate used to test bytes. This is a function that takes a byte and returns a boolean.")),(0,i.kt)("h4",{id:"returns-16"},"Returns"),(0,i.kt)("p",null,"Returns the new ",(0,i.kt)("inlineCode",{parentName:"p"},"ByteVector"),"."),(0,i.kt)("h4",{id:"errors-16"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"splitat"},"splitAt"),(0,i.kt)("h4",{id:"signatures-17"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"splitAt(n: Long): Array[ByteVector]\n")),(0,i.kt)("h4",{id:"description-17"},"Description"),(0,i.kt)("p",null,"Returns an array of two vectors such that the first element is equal to ",(0,i.kt)("inlineCode",{parentName:"p"},"take(n)")," and the second element is equal to\n",(0,i.kt)("inlineCode",{parentName:"p"},"drop(n)"),"."),(0,i.kt)("h4",{id:"parameters-17"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"n")," \u2014 The index at which to split this vector.")),(0,i.kt)("h4",{id:"returns-17"},"Returns"),(0,i.kt)("p",null,"The array of two byte vectors."),(0,i.kt)("h4",{id:"errors-17"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"slice"},"slice"),(0,i.kt)("h4",{id:"signatures-18"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"slice(from: Long, until: Long) returns ByteVector\n")),(0,i.kt)("h4",{id:"description-18"},"Description"),(0,i.kt)("p",null,"Returns a vector made up of the bytes starting at index from up to index until."),(0,i.kt)("h4",{id:"parameters-18"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"from")," \u2014 The index at which to start the slice."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"until")," \u2014 The index at which to end the slice.")),(0,i.kt)("h4",{id:"returns-18"},"Returns"),(0,i.kt)("p",null,"Returns the new ",(0,i.kt)("inlineCode",{parentName:"p"},"ByteVector"),"."),(0,i.kt)("h4",{id:"errors-18"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"acquire"},"acquire"),(0,i.kt)("h4",{id:"signatures-19"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"acquire(n: Long) returns ByteVector\n")),(0,i.kt)("h4",{id:"description-19"},"Description"),(0,i.kt)("p",null,"Returns a vector whose contents are the results of taking the first n bytes of this vector."),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"See also"),": take"),(0,i.kt)("h4",{id:"parameters-19"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"n")," \u2014 The number of bytes to take from the beginning of this vector. Negative values are treated as 0.")),(0,i.kt)("h4",{id:"returns-19"},"Returns"),(0,i.kt)("p",null,"Returns the number of bytes in this ",(0,i.kt)("inlineCode",{parentName:"p"},"ByteVector"),"."),(0,i.kt)("h4",{id:"errors-19"},"Errors"),(0,i.kt)("p",null,"If this vector does not contain at least n bytes, an error is signalled."),(0,i.kt)("h3",{id:"consume"},"consume"),(0,i.kt)("h4",{id:"signatures-20"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"consume( n: Long, decode: (ByteVector) returns Object) returns Array[Object]\n")),(0,i.kt)("h4",{id:"description-20"},"Description"),(0,i.kt)("p",null,"Consumes the first n bytes of this vector and decodes them with the specified function, resulting in a vector of the\nremaining bytes and the decoded value."),(0,i.kt)("h4",{id:"parameters-20"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"n")," \u2014 The number of bytes to consume."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"decode")," \u2014 The function used to decode the bytes. This is a function that takes a ",(0,i.kt)("inlineCode",{parentName:"li"},"ByteVector")," and returns an object.")),(0,i.kt)("h4",{id:"returns-20"},"Returns"),(0,i.kt)("p",null,"Returns an array of two elements: the first element is a byte vector containing the remaining bytes, and the second\nelement is the decoded value."),(0,i.kt)("h4",{id:"errors-20"},"Errors"),(0,i.kt)("p",null,"If this vector does not have n bytes or an error occurs while decoding, an error is signaled."),(0,i.kt)("h3",{id:"foreach"},"foreach"),(0,i.kt)("h4",{id:"signatures-21"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"foreach(f: (Byte))\n")),(0,i.kt)("h4",{id:"description-21"},"Description"),(0,i.kt)("p",null,"Apply the specified function to each byte in this vector."),(0,i.kt)("h4",{id:"parameters-21"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"f")," \u2014 The function to apply to each byte. This is a function that takes a byte and returns nothing.")),(0,i.kt)("h4",{id:"returns-21"},"Returns"),(0,i.kt)("p",null,"Returns nothing."),(0,i.kt)("h4",{id:"errors-21"},"Errors"),(0,i.kt)("p",null,"Signals an error if the specified function signals an error."),(0,i.kt)("h3",{id:"startswith"},"startsWith"),(0,i.kt)("h4",{id:"signatures-22"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"startsWith(b: ByteVector): Boolean\n")),(0,i.kt)("h4",{id:"description-22"},"Description"),(0,i.kt)("p",null,"Returns true if this byte vector starts with the specified vector."),(0,i.kt)("h4",{id:"parameters-22"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"b")," \u2014 The vector to test as a prefix of the byte vector.")),(0,i.kt)("h4",{id:"returns-22"},"Returns"),(0,i.kt)("p",null,"Returns true if this byte vector starts with the specified vector."),(0,i.kt)("h4",{id:"errors-22"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"endswith"},"endsWith"),(0,i.kt)("h4",{id:"signatures-23"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"endsWith(b: ByteVector): Boolean\n")),(0,i.kt)("h4",{id:"description-23"},"Description"),(0,i.kt)("p",null,"Returns true if this byte vector ends with the specified vector."),(0,i.kt)("h4",{id:"parameters-23"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"b")," \u2014 The vector to test as a suffix of the byte vector.")),(0,i.kt)("h4",{id:"returns-23"},"Returns"),(0,i.kt)("p",null,"Returns true if this byte vector ends with the specified vector."),(0,i.kt)("h4",{id:"errors-23"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"indexofslice"},"indexOfSlice"),(0,i.kt)("h4",{id:"signatures-24"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"indexOfSlice(slice: ByteVector): Long\nindexOfSlice(slice: ByteVector, from: Long): Long\n")),(0,i.kt)("h4",{id:"description-24"},"Description"),(0,i.kt)("p",null,"Finds the first index of the specified byte pattern in this vector."),(0,i.kt)("h4",{id:"parameters-24"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"slice")," \u2014 The byte pattern to search for."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"from")," \u2014 The index at which to start the search. Defaults to 0.")),(0,i.kt)("h4",{id:"returns-24"},"Returns"),(0,i.kt)("p",null,"Returns the index of the first occurrence of the specified byte pattern, or -1 if the pattern is not found."),(0,i.kt)("h4",{id:"errors-24"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"containsslice"},"containsSlice"),(0,i.kt)("h4",{id:"signatures-25"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"containsSlice(slice: ByteVector) returns Boolean\n")),(0,i.kt)("h4",{id:"description-25"},"Description"),(0,i.kt)("p",null,"Determines if the specified slice is in this vector."),(0,i.kt)("h4",{id:"parameters-25"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"slice")," \u2014 The byte pattern to search for.")),(0,i.kt)("h4",{id:"returns-25"},"Returns"),(0,i.kt)("p",null,"Returns true if the specified slice is in this vector."),(0,i.kt)("h4",{id:"errors-25"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"head"},"head"),(0,i.kt)("h4",{id:"signatures-26"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"head() returns Byte\n")),(0,i.kt)("h4",{id:"description-26"},"Description"),(0,i.kt)("p",null,"Returns the first byte in this vector."),(0,i.kt)("h4",{id:"parameters-26"},"Parameters"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h4",{id:"returns-26"},"Returns"),(0,i.kt)("p",null,"Returns the first byte in this vector."),(0,i.kt)("h4",{id:"errors-26"},"Errors"),(0,i.kt)("p",null,"Signals an error if this vector is empty."),(0,i.kt)("h3",{id:"headoption"},"headOption"),(0,i.kt)("h4",{id:"signatures-27"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"headOption() returns Option[Byte]\n")),(0,i.kt)("h4",{id:"description-27"},"Description"),(0,i.kt)("p",null,"Returns the first byte of this vector or None if the vector is empty."),(0,i.kt)("h4",{id:"parameters-27"},"Parameters"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h4",{id:"returns-27"},"Returns"),(0,i.kt)("p",null,"Returns an Option containing the first byte of this vector or None if the vector is empty."),(0,i.kt)("h4",{id:"errors-27"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"tail"},"tail"),(0,i.kt)("h4",{id:"signatures-28"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"tail() returns ByteVector\n")),(0,i.kt)("h4",{id:"description-28"},"Description"),(0,i.kt)("p",null,"Returns a vector containing all bytes in this vector except the first byte."),(0,i.kt)("h4",{id:"parameters-28"},"Parameters"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h4",{id:"returns-28"},"Returns"),(0,i.kt)("p",null,"Returns the new ",(0,i.kt)("inlineCode",{parentName:"p"},"ByteVector"),"."),(0,i.kt)("h4",{id:"errors-28"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"init"},"init"),(0,i.kt)("h4",{id:"signatures-29"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"init() returns ByteVector\n")),(0,i.kt)("h4",{id:"description-29"},"Description"),(0,i.kt)("p",null,"Returns a vector containing all bytes in this vector except the last byte."),(0,i.kt)("h4",{id:"parameters-29"},"Parameters"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h4",{id:"returns-29"},"Returns"),(0,i.kt)("p",null,"Returns the new ",(0,i.kt)("inlineCode",{parentName:"p"},"ByteVector"),"."),(0,i.kt)("h4",{id:"errors-29"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"last"},"last"),(0,i.kt)("h4",{id:"signatures-30"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"last() returns Byte\n")),(0,i.kt)("h4",{id:"description-30"},"Description"),(0,i.kt)("p",null,"Returns the last byte in this vector."),(0,i.kt)("h4",{id:"parameters-30"},"Parameters"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h4",{id:"returns-30"},"Returns"),(0,i.kt)("p",null,"Returns the last byte in this vector."),(0,i.kt)("h4",{id:"errors-30"},"Errors"),(0,i.kt)("p",null,"Signals an error if this vector is empty."),(0,i.kt)("h3",{id:"tailoption"},"tailOption"),(0,i.kt)("h4",{id:"signatures-31"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"tailOption() returns Option[Byte]\n")),(0,i.kt)("h4",{id:"description-31"},"Description"),(0,i.kt)("p",null,"Returns the last byte of this vector or None if the vector is empty."),(0,i.kt)("h4",{id:"parameters-31"},"Parameters"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h4",{id:"returns-31"},"Returns"),(0,i.kt)("p",null,"Returns an Option containing the last byte of this vector or None if the vector is empty."),(0,i.kt)("h4",{id:"errors-31"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"padright"},"padRight"),(0,i.kt)("h4",{id:"signatures-32"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"padRight(n: Long) returns ByteVector\n")),(0,i.kt)("h4",{id:"description-32"},"Description"),(0,i.kt)("p",null,"Returns an n-byte vector whose contents are this vector's contents followed by 0 or more zero bytes."),(0,i.kt)("h4",{id:"parameters-32"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"n")," \u2014 The larger size to pad to.")),(0,i.kt)("h4",{id:"returns-32"},"Returns"),(0,i.kt)("p",null,"Returns the new padded ",(0,i.kt)("inlineCode",{parentName:"p"},"ByteVector"),"."),(0,i.kt)("h4",{id:"errors-32"},"Errors"),(0,i.kt)("p",null,"Signals an error if n is less than the size of this vector."),(0,i.kt)("h3",{id:"padleft"},"padLeft"),(0,i.kt)("h4",{id:"signatures-33"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"padLeft(n: Long) returns ByteVector\n")),(0,i.kt)("h4",{id:"description-33"},"Description"),(0,i.kt)("p",null,"Returns an n-bytes vector whose contents are 0 or more zero bytes followed by this vector's contents."),(0,i.kt)("h4",{id:"parameters-33"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"n")," \u2014 The larger size to pad to.")),(0,i.kt)("h4",{id:"returns-33"},"Returns"),(0,i.kt)("p",null,"Returns the new padded ",(0,i.kt)("inlineCode",{parentName:"p"},"ByteVector"),"."),(0,i.kt)("h4",{id:"errors-33"},"Errors"),(0,i.kt)("p",null,"Signals an error if n is less than the size of this vector."),(0,i.kt)("h3",{id:"map"},"map"),(0,i.kt)("h4",{id:"signatures-34"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"map(f: (Byte) returns Byte) returns ByteVector\n")),(0,i.kt)("h4",{id:"description-34"},"Description"),(0,i.kt)("p",null,"Computes a new byte vector where each byte is the result of applying the specified function to the corresponding byte in\nthis vector. This method returns a view and hence, is O(1). Call compact to generate a new strict vector."),(0,i.kt)("h4",{id:"parameters-34"},"Parameters"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h4",{id:"returns-34"},"Returns"),(0,i.kt)("p",null,"Returns the new ",(0,i.kt)("inlineCode",{parentName:"p"},"ByteVector"),"."),(0,i.kt)("h4",{id:"errors-34"},"Errors"),(0,i.kt)("p",null,"Signals an error if the specified function signals an error."),(0,i.kt)("h3",{id:"reverse"},"reverse"),(0,i.kt)("h4",{id:"signatures-35"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"reverse() returns ByteVector\n")),(0,i.kt)("h4",{id:"description-35"},"Description"),(0,i.kt)("p",null,"Returns a vector with the bytes of this vector in reverse order. This method returns a view and hence, is O(1). Call\ncompact to generate a new strict vector."),(0,i.kt)("h4",{id:"parameters-35"},"Parameters"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h4",{id:"returns-35"},"Returns"),(0,i.kt)("p",null,"Returns a vector with the bytes of this vector in reverse order."),(0,i.kt)("h4",{id:"errors-35"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"shiftleft"},"shiftLeft"),(0,i.kt)("h4",{id:"signatures-36"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"shiftLeft(n: Long) returns ByteVector\n")),(0,i.kt)("h4",{id:"description-36"},"Description"),(0,i.kt)("p",null,"Computes a new byte vector that contains the bits of this vector shifted left by the specified number of bits."),(0,i.kt)("h4",{id:"parameters-36"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"n")," \u2014 The number of bits to shift left.")),(0,i.kt)("h4",{id:"returns-36"},"Returns"),(0,i.kt)("p",null,"Returns the new ",(0,i.kt)("inlineCode",{parentName:"p"},"ByteVector"),"."),(0,i.kt)("h4",{id:"errors-36"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"shiftright"},"shiftRight"),(0,i.kt)("h4",{id:"signatures-37"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"shiftRight(n: Long) returns ByteVector\n")),(0,i.kt)("h4",{id:"description-37"},"Description"),(0,i.kt)("p",null,"Computes a new byte vector that contains the bits of this vector shifted right by the specified number of bits."),(0,i.kt)("h4",{id:"parameters-37"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"n")," \u2014 The number of bits to shift right.")),(0,i.kt)("h4",{id:"returns-37"},"Returns"),(0,i.kt)("p",null,"Returns the new ",(0,i.kt)("inlineCode",{parentName:"p"},"ByteVector"),"."),(0,i.kt)("h4",{id:"errors-37"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"rotateleft"},"rotateLeft"),(0,i.kt)("h4",{id:"signatures-38"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"rotateLeft(n: Long) returns ByteVector\n")),(0,i.kt)("h4",{id:"description-38"},"Description"),(0,i.kt)("p",null,"Computes a new byte vector that contains the bits of this vector rotated left by the specified number of bits."),(0,i.kt)("h4",{id:"parameters-38"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"n")," \u2014 The number of bits to rotate left.")),(0,i.kt)("h4",{id:"returns-38"},"Returns"),(0,i.kt)("p",null,"Returns the new ",(0,i.kt)("inlineCode",{parentName:"p"},"ByteVector"),"."),(0,i.kt)("h4",{id:"errors-38"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"rotateright"},"rotateRight"),(0,i.kt)("h4",{id:"signatures-39"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"rotateRight(n: Long) returns ByteVector\n")),(0,i.kt)("h4",{id:"description-39"},"Description"),(0,i.kt)("p",null,"Computes a new byte vector that contains the bits of this vector rotated right by the specified number of bits."),(0,i.kt)("h4",{id:"parameters-39"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"n")," \u2014 The number of bits to rotate right.")),(0,i.kt)("h4",{id:"returns-39"},"Returns"),(0,i.kt)("p",null,"Returns the new ",(0,i.kt)("inlineCode",{parentName:"p"},"ByteVector"),"."),(0,i.kt)("h4",{id:"errors-39"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"compact"},"compact"),(0,i.kt)("h4",{id:"signatures-40"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"compact() returns ByteVector\n")),(0,i.kt)("h4",{id:"description-40"},"Description"),(0,i.kt)("p",null,"Returns a vector with the same contents but represented as a single tree node internally.\nThis may involve copying data, but has the advantage that lookups index directly into a single node rather than\ntraversing a logarithmic number of nodes in this tree.\nCalling this method on an already compacted vector is a no-op."),(0,i.kt)("h4",{id:"parameters-40"},"Parameters"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h4",{id:"returns-40"},"Returns"),(0,i.kt)("p",null,"Returns the compacted ",(0,i.kt)("inlineCode",{parentName:"p"},"ByteVector"),"."),(0,i.kt)("h4",{id:"errors-40"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"partialcompact"},"partialCompact"),(0,i.kt)("h4",{id:"signatures-41"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"partialCompact(chunkSize: Long) returns ByteVector\n")),(0,i.kt)("h4",{id:"description-41"},"Description"),(0,i.kt)("p",null,"Invokes compact on any subtrees whose size is <= chunkSize."),(0,i.kt)("h4",{id:"parameters-41"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"chunkSize")," \u2014 The threshold size of chunks to compact.")),(0,i.kt)("h4",{id:"returns-41"},"Returns"),(0,i.kt)("p",null,"Returns the compacted ",(0,i.kt)("inlineCode",{parentName:"p"},"ByteVector"),"."),(0,i.kt)("h4",{id:"errors-41"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"copy"},"copy"),(0,i.kt)("h4",{id:"signatures-42"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"copy() returns ByteVector\n")),(0,i.kt)("h4",{id:"description-42"},"Description"),(0,i.kt)("p",null,"Returns a vector with the same contents as this vector but with a single compacted node made up by evaluating all\ninternal nodes and concatenating their values."),(0,i.kt)("h4",{id:"parameters-42"},"Parameters"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h4",{id:"returns-42"},"Returns"),(0,i.kt)("p",null,"Returns the copied ",(0,i.kt)("inlineCode",{parentName:"p"},"ByteVector"),"."),(0,i.kt)("h4",{id:"errors-42"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"toarray"},"toArray"),(0,i.kt)("h4",{id:"signatures-43"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"toArray returns Array[Byte]\n")),(0,i.kt)("h4",{id:"description-43"},"Description"),(0,i.kt)("p",null,"Allocate a new array and copy the contents of this vector into it."),(0,i.kt)("h4",{id:"parameters-43"},"Parameters"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h4",{id:"returns-43"},"Returns"),(0,i.kt)("p",null,"Returns the byte array."),(0,i.kt)("h4",{id:"errors-43"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"copytoarray"},"copyToArray"),(0,i.kt)("h4",{id:"signatures-44"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"copyToArray(xs: Array[Byte], start: Int)\ncopyToArray(xs: Array[Byte], start: Int)copyToArray(xs: Array[Byte], start: Int, offset: Long, size: Int)\n")),(0,i.kt)("h4",{id:"description-44"},"Description"),(0,i.kt)("p",null,"Copies the contents of this vector into the specified array starting at the specified index."),(0,i.kt)("h4",{id:"parameters-44"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"xs")," \u2014 The array to copy into."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"start")," \u2014 The index in the array to start copying at."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"offset")," \u2014 The offset in this vector to start copying from. Defaults to zero."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"size")," \u2014 The number of bytes to copy.")),(0,i.kt)("h4",{id:"returns-44"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h4",{id:"errors-44"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"tohex"},"toHex"),(0,i.kt)("h4",{id:"signatures-45"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"toHex() returns String\n")),(0,i.kt)("h4",{id:"description-45"},"Description"),(0,i.kt)("p",null,"Returns a hexadecimal string representation of this vector. Each byte is represented by two hexadecimal digits."),(0,i.kt)("h4",{id:"parameters-45"},"Parameters"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h4",{id:"returns-45"},"Returns"),(0,i.kt)("p",null,"Returns the number of bytes in this ",(0,i.kt)("inlineCode",{parentName:"p"},"ByteVector"),"."),(0,i.kt)("h4",{id:"errors-45"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"hashcode"},"hashCode"),(0,i.kt)("h4",{id:"signatures-46"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"hashCode() returns Int\n")),(0,i.kt)("h4",{id:"description-46"},"Description"),(0,i.kt)("p",null,"Calculates a hash code for this vector. The result is cached."),(0,i.kt)("h4",{id:"parameters-46"},"Parameters"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h4",{id:"returns-46"},"Returns"),(0,i.kt)("p",null,"Returns the hashcode."),(0,i.kt)("h4",{id:"errors-46"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h3",{id:"equals"},"equals"),(0,i.kt)("h4",{id:"signatures-47"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"equals(that: Object) returns Bool\n")),(0,i.kt)("h4",{id:"description-47"},"Description"),(0,i.kt)("p",null,"Returns true if ",(0,i.kt)("inlineCode",{parentName:"p"},"that")," is a ",(0,i.kt)("inlineCode",{parentName:"p"},"ByteVector")," that has the same content as this."),(0,i.kt)("h4",{id:"parameters-47"},"Parameters"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h4",{id:"returns-47"},"Returns"),(0,i.kt)("p",null,"Returns true if ",(0,i.kt)("inlineCode",{parentName:"p"},"that")," is a ",(0,i.kt)("inlineCode",{parentName:"p"},"ByteVector")," that has the same content as this."),(0,i.kt)("h4",{id:"errors-47"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("p",null,"========================================="),(0,i.kt)("h3",{id:"size-1"},"size"),(0,i.kt)("h4",{id:"signatures-48"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"size() returns Long\n")),(0,i.kt)("h4",{id:"description-48"},"Description"),(0,i.kt)("p",null,"Returns the number of bytes in this ",(0,i.kt)("inlineCode",{parentName:"p"},"ByteVector"),"."),(0,i.kt)("h4",{id:"parameters-48"},"Parameters"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("h4",{id:"returns-48"},"Returns"),(0,i.kt)("p",null,"Returns the number of bytes in this ",(0,i.kt)("inlineCode",{parentName:"p"},"ByteVector"),"."),(0,i.kt)("h4",{id:"errors-48"},"Errors"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("em",{parentName:"em"},"None"))),(0,i.kt)("p",null,"============================="),(0,i.kt)("p",null,"Additional conversion functions/methods may be useful. The specific types will vary with the implementation language.\nSome conversion functions/methods that may be useful will be to streams, I/O streams, buffers and bit vectors."))}d.isMDXComponent=!0}}]);