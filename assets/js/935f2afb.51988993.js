"use strict";(self.webpackChunksdk_spec=self.webpackChunksdk_spec||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Getting Started","href":"/sdk-spec/docs/Getting Started","docId":"Getting Started"},{"type":"category","label":"Overview","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Assumptions","href":"/sdk-spec/docs/Overview/Assumptions","docId":"Overview/Assumptions"},{"type":"link","label":"Hiding Nondeterminism and Organizing TxO State","href":"/sdk-spec/docs/Overview/HidingNonDeterminism","docId":"Overview/HidingNonDeterminism"},{"type":"link","label":"Implementation Guidelines","href":"/sdk-spec/docs/Overview/ImplementationGuidelines","docId":"Overview/ImplementationGuidelines"},{"type":"link","label":"Introduction","href":"/sdk-spec/docs/Overview/Introduction","docId":"Overview/Introduction"},{"type":"link","label":"Logging Requirements","href":"/sdk-spec/docs/Overview/Logging","docId":"Overview/Logging"},{"type":"link","label":"Multi-Signature Spending Propositions","href":"/sdk-spec/docs/Overview/MultiSignature","docId":"Overview/MultiSignature"}]}]},"docs":{"Getting Started":{"id":"Getting Started","title":"Getting Started","description":"","sidebar":"tutorialSidebar"},"Overview/Assumptions":{"id":"Overview/Assumptions","title":"Assumptions","description":"This specification contains descriptions of the SDK interfaces. The descriptions are documented in a way that assumes all languages used for implementations have a common set of features related to supporting the object-oriented paradigm:","sidebar":"tutorialSidebar"},"Overview/HidingNonDeterminism":{"id":"Overview/HidingNonDeterminism","title":"Hiding Nondeterminism and Organizing TxO State","description":"One of the design goals of this SDK is to model the state of TxOs (transaction outputs). The following discussion ignores transactions with multi-signature spending propositions.","sidebar":"tutorialSidebar"},"Overview/ImplementationGuidelines":{"id":"Overview/ImplementationGuidelines","title":"Implementation Guidelines","description":"Transactions have these size limits:","sidebar":"tutorialSidebar"},"Overview/Introduction":{"id":"Overview/Introduction","title":"Introduction","description":"Applications interact with the Topl blockchain using an implementation of the Topl SDK (software development kit). The Topl SDK is to be implemented in multiple programming languages.","sidebar":"tutorialSidebar"},"Overview/Logging":{"id":"Overview/Logging","title":"Logging Requirements","description":"All interfaces will be implemented to work with a configurable logging library. The logging library should have methods that allow log items to be generated. Each logging call will associate the log item with a logging level (error, warning, info, debug, trace). The configuration of the logging library should determine where the log items are sent ( local file, logging service, standard output, database, \u2026) and the minimum level of message that will be send to each output destination.","sidebar":"tutorialSidebar"},"Overview/MultiSignature":{"id":"Overview/MultiSignature","title":"Multi-Signature Spending Propositions","description":"In the case of multi-signature spending propositions, there are multiple parties that can successfully post a transaction to an account. This will necessitate having a mechanism to coordinate the signing parties in order to know the account\u2019s confidence factor and status.","sidebar":"tutorialSidebar"}}}')}}]);