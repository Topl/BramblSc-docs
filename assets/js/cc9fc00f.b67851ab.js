"use strict";(self.webpackChunksdk_spec=self.webpackChunksdk_spec||[]).push([[66],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),p=u(r),m=i,h=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return r?n.createElement(h,l(l({ref:t},c),{},{components:r})):n.createElement(h,l({ref:t},c))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,l=new Array(o);l[0]=p;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:i,l[1]=a;for(var u=2;u<o;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},4089:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>u});var n=r(7462),i=(r(7294),r(3905));const o={},l="NodeUtils",a={unversionedId:"Modules/Util/NodeUtils/NodeUtils",id:"Modules/Util/NodeUtils/NodeUtils",title:"NodeUtils",description:"This page describes interfaces and helper classes that are used to work with a Bifrost node. The descriptions are in a",source:"@site/docs/Modules/Util/NodeUtils/NodeUtils.md",sourceDirName:"Modules/Util/NodeUtils",slug:"/Modules/Util/NodeUtils/",permalink:"/sdk-spec/docs/Modules/Util/NodeUtils/",draft:!1,editUrl:"https://github.com/topl/sdk-spec/tree/main/packages/create-docusaurus/templates/shared/docs/Modules/Util/NodeUtils/NodeUtils.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Util",permalink:"/sdk-spec/docs/Modules/Util/"},next:{title:"BifrostConnection.getUrl Tests",permalink:"/sdk-spec/docs/Modules/Util/NodeUtils/bifrost_connection_tests/getUrl_test"}},s={},u=[{value:"Interface BifrostConnection",id:"interface-bifrostconnection",level:2},{value:"getUrl",id:"geturl",level:3},{value:"Signature(s)",id:"signatures",level:4},{value:"Description",id:"description",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Errors",id:"errors",level:4},{value:"Testing Procedure",id:"testing-procedure",level:4},{value:"Class NodeCache",id:"class-nodecache",level:2},{value:"Constructor",id:"constructor",level:3},{value:"Signature(s)",id:"signatures-1",level:4},{value:"Description",id:"description-1",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Errors",id:"errors-1",level:4},{value:"Testing Procedure",id:"testing-procedure-1",level:4},{value:"getGenesisBlock",id:"getgenesisblock",level:3},{value:"Signature(s)",id:"signatures-2",level:4},{value:"Description",id:"description-2",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Errors",id:"errors-2",level:4},{value:"Testing Procedure",id:"testing-procedure-2",level:4},{value:"getNodeConfig",id:"getnodeconfig",level:3},{value:"Signature(s)",id:"signatures-3",level:4},{value:"Description",id:"description-3",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Errors",id:"errors-3",level:4},{value:"Testing Procedure",id:"testing-procedure-3",level:4},{value:"Class SlotUtil",id:"class-slotutil",level:2},{value:"slotNumberToTimestamp",id:"slotnumbertotimestamp",level:3},{value:"Signature(s)",id:"signatures-4",level:4},{value:"Description",id:"description-4",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Errors",id:"errors-4",level:4},{value:"Testing Procedure",id:"testing-procedure-4",level:4},{value:"timestampToSlotNumber",id:"timestamptoslotnumber",level:3},{value:"Signature(s)",id:"signatures-5",level:4},{value:"Description",id:"description-5",level:4},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Errors",id:"errors-5",level:4},{value:"Testing Procedure",id:"testing-procedure-5",level:4}],c={toc:u};function d(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"nodeutils"},"NodeUtils"),(0,i.kt)("p",null,"This page describes interfaces and helper classes that are used to work with a Bifrost node. The descriptions are in a\nlanguage-neutral form. To be language-neutral, we ",(0,i.kt)("a",{parentName:"p",href:"../../Overview/Assumptions"},"follow a set of assumptions"),"."),(0,i.kt)("p",null,"The interfaces and classes documented on this page are:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#interface-bifrostconnection"},"BifrostConnection")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#class-nodecache"},"NodeCache")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#class-slotutil"},"SlotUtil"))),(0,i.kt)("h2",{id:"interface-bifrostconnection"},"Interface BifrostConnection"),(0,i.kt)("p",null,"Objects that implement this interface are responsible for providing connections used for gRPC calls from a client to a\nBifrost node. Such objects also provide information about how the connections are configured."),(0,i.kt)("p",null,"All classes that implement this interface will implementation specific. In particular, this interface does not specify\nanything about how connections are managed. The expectation is that all details related to connection management will be\ndetermined by the gRPC implementation used, as that will be the main consumer of this interface's implementation."),(0,i.kt)("p",null,"Here is a summary of the methods/functions in this interface:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#geturl"},"getUrl")," \u2014 Get the URL of the Bifrost node that a BifrostConnection works with.")),(0,i.kt)("h3",{id:"geturl"},"getUrl"),(0,i.kt)("h4",{id:"signatures"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"getUrl() returns String\n")),(0,i.kt)("h4",{id:"description"},"Description"),(0,i.kt)("p",null,"Return the URL of the Bifrost node that this object connects to."),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"No Parameters")),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,"A string that is the URL of the Bifrost node this object connect to."),(0,i.kt)("h4",{id:"errors"},"Errors"),(0,i.kt)("p",null,"The errors that the method/function will produce include:"),(0,i.kt)("p",null,"No expected errors"),(0,i.kt)("h4",{id:"testing-procedure"},"Testing Procedure"),(0,i.kt)("p",null,"The testing procedure for ",(0,i.kt)("inlineCode",{parentName:"p"},"getNodeConfig")," is ",(0,i.kt)("a",{parentName:"p",href:"NodeUtils/bifrost_connection_tests/getUrl_test"},"described on a separate page")),(0,i.kt)("h2",{id:"class-nodecache"},"Class NodeCache"),(0,i.kt)("p",null,"This class is responsible for caching various information from a BiFrost node."),(0,i.kt)("p",null,"Here is a summary of the methods/functions in this class:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#constructor"},"Constructor")," \u2014 Construct a ",(0,i.kt)("inlineCode",{parentName:"li"},"NodeCache")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#getgenesisblock"},"getGenesisBlock")," \u2014 Get the Bifrost node's genesis block"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#getnodeconfig"},"getNodeConfig")," \u2014 Get the Bifrost node's configuration information.")),(0,i.kt)("h3",{id:"constructor"},"Constructor"),(0,i.kt)("h4",{id:"signatures-1"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"NodeCache(connection: BifrostConnection, timeoutMillis: uint64)\n")),(0,i.kt)("h4",{id:"description-1"},"Description"),(0,i.kt)("p",null,"Construct an instance of ",(0,i.kt)("inlineCode",{parentName:"p"},"NodeCache")," that gets data from the bifrost node that the given ",(0,i.kt)("inlineCode",{parentName:"p"},"BifrostConnection")," object\nconnects to. The constructor must initiate the pre-fetch of the node's configuration and Genesis block information."),(0,i.kt)("p",null,"The pre-fetch may be synchronous or asynchronous. It is recommended, but not required, that the pre-fetch be\nasynchronous. If the pre-fetch is synchronous, then the constructor will be expected to produce the errors noted below.\nIf the pre-fetch is asynchronous, then any errors encountered will not be returned from this constructor, but from the\nfunctions/methods that attempt to access the information from the constructed object."),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"connection")," the ",(0,i.kt)("inlineCode",{parentName:"li"},"BifrostConnection")," object that will be used to communicate with the Bifrost node.")),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,"The constructed object."),(0,i.kt)("h4",{id:"errors-1"},"Errors"),(0,i.kt)("p",null,"The errors that the method/function will produce include:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Unable to connect to Bifrost node."),(0,i.kt)("li",{parentName:"ul"},"Bifrost node returned an error.")),(0,i.kt)("h4",{id:"testing-procedure-1"},"Testing Procedure"),(0,i.kt)("p",null,"The testing procedure for ",(0,i.kt)("inlineCode",{parentName:"p"},"getNodeConfig")," is ",(0,i.kt)("a",{parentName:"p",href:"NodeUtils/nodecache_tests/constructor_test"},"described on a separate page")),(0,i.kt)("h3",{id:"getgenesisblock"},"getGenesisBlock"),(0,i.kt)("h4",{id:"signatures-2"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"getGenesisBlock() returns co.topl.proto.models.FullBlock\n")),(0,i.kt)("h4",{id:"description-2"},"Description"),(0,i.kt)("p",null,"Get a cached version of the genesis block. This cached object is obtained by the ",(0,i.kt)("inlineCode",{parentName:"p"},"NodeCache")," constructor initiating a\ncall to calling ",(0,i.kt)("inlineCode",{parentName:"p"},"BifrostQuery.getBlockByHeight(1)"),"."),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"No Parameters")),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,"The cached ",(0,i.kt)("inlineCode",{parentName:"p"},"co.topl.proto.models.FullBlock")," object."),(0,i.kt)("h4",{id:"errors-2"},"Errors"),(0,i.kt)("p",null,"The errors that the method/function will produce as a result of a failed asynchronous query initiated by the constructor\ninclude:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Unable to connect to Bifrost node."),(0,i.kt)("li",{parentName:"ul"},"Bifrost node returned an error."),(0,i.kt)("li",{parentName:"ul"},"The Bifrost node returned an error ."),(0,i.kt)("li",{parentName:"ul"},"The Bifrost node did not return a result before the timeout happened")),(0,i.kt)("h4",{id:"testing-procedure-2"},"Testing Procedure"),(0,i.kt)("p",null,"The testing procedure for the constructor is ",(0,i.kt)("a",{parentName:"p",href:"NodeUtils/nodecache_tests/getgenesisblock_test"},"described on a separate page")),(0,i.kt)("h3",{id:"getnodeconfig"},"getNodeConfig"),(0,i.kt)("h4",{id:"signatures-3"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"getNodeConfig(connection: BifrostConnection, timeoutMillis: uint64, maxAgeMillis: uint64)\n    returns co.topl.proto.models.node.NodeConfig\n")),(0,i.kt)("h4",{id:"description-3"},"Description"),(0,i.kt)("p",null,"Get a possibly cached version of the Bifrost node's configuration information. It gets the ",(0,i.kt)("inlineCode",{parentName:"p"},"NodeConfig")," object by\ncalling ",(0,i.kt)("inlineCode",{parentName:"p"},"BifrostQuery.getNodeConfig")," if there is no cached object or the cached object is too old."),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"connection")," the ",(0,i.kt)("inlineCode",{parentName:"li"},"BifrostConnection")," object that will be used to communicate with the Bifrost node."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"timeoutMillis")," ",(0,i.kt)("em",{parentName:"li"},"(optional)")," The maximum number of milliseconds to wait. The default value is 2000 (2 seconds)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"maxAgeMillis")," ",(0,i.kt)("em",{parentName:"li"},"(optional)")," The maximum age of the object to be returned. The default value is 86,400,000 (1 day). If\nthe ",(0,i.kt)("inlineCode",{parentName:"li"},"NodeConfig")," object is older than this, it will be refreshed by calling ",(0,i.kt)("inlineCode",{parentName:"li"},"BifrostQuery.getNodeConfig"),".")),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"co.topl.proto.models.node.NodeConfig")," that contains the node's configuration. The encapsulated configuration must\ninclude the configured slot duration."),(0,i.kt)("p",null,"The value is cached. The implementation is expected to refresh the information when it"),(0,i.kt)("h4",{id:"errors-3"},"Errors"),(0,i.kt)("p",null,"The errors that the method/function will produce include:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Unable to connect to Bifrost node."),(0,i.kt)("li",{parentName:"ul"},"Bifrost node returned an error."),(0,i.kt)("li",{parentName:"ul"},"The Bifrost node returned an error ."),(0,i.kt)("li",{parentName:"ul"},"The Bifrost node did not return a result before the timeout happened")),(0,i.kt)("h4",{id:"testing-procedure-3"},"Testing Procedure"),(0,i.kt)("p",null,"The testing procedure for the constructor is ",(0,i.kt)("a",{parentName:"p",href:"NodeUtils/nodecache_tests/getnodeconfig_test"},"described on a separate page")),(0,i.kt)("h2",{id:"class-slotutil"},"Class SlotUtil"),(0,i.kt)("h3",{id:"slotnumbertotimestamp"},"slotNumberToTimestamp"),(0,i.kt)("h4",{id:"signatures-4"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"slotNumberToTimestamp(slotNumber: uint64, slotDuration: uint32, genesisTimestamp: int64) returns int64\n")),(0,i.kt)("h4",{id:"description-4"},"Description"),(0,i.kt)("p",null,"Convert a slot number to a timestamp."),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"slotNumber")," a number that identifies a slot in a Topl blockchain network."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"slotDuration")," the duration of a slot in milliseconds"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"genesisTimestamp")," The Unix timestamp from the genesis block which is the beginning of slot 0")),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,"A ",(0,i.kt)("a",{parentName:"p",href:"https://www.unixtimestamp.com/"},"Unix timestamp")),(0,i.kt)("h4",{id:"errors-4"},"Errors"),(0,i.kt)("p",null,"The errors that the method/function will produce include:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Non-positive slot duration"),(0,i.kt)("li",{parentName:"ul"},"Slot number translates to a time too far in the future to be represented as a Unix timestamp (overflow).")),(0,i.kt)("h4",{id:"testing-procedure-4"},"Testing Procedure"),(0,i.kt)("p",null,"The testing procedure for the constructor is ",(0,i.kt)("a",{parentName:"p",href:"NodeUtils/slotutil_tests/slot_timestamp_conversion_test"},"described on a separate page")),(0,i.kt)("h3",{id:"timestamptoslotnumber"},"timestampToSlotNumber"),(0,i.kt)("h4",{id:"signatures-5"},"Signature(s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"timestampToSlotNumber(timestamp: int64, slotDuration: uint32, genesisTimestamp: int64) returns uint64\n")),(0,i.kt)("h4",{id:"description-5"},"Description"),(0,i.kt)("p",null,"Convert a timestamp to a slot number."),(0,i.kt)("h4",{id:"parameters-5"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"timestamp")," a ",(0,i.kt)("a",{parentName:"li",href:"https://www.unixtimestamp.com/"},"Unix timestamp")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"slotDuration")," the duration of a slot in milliseconds"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"genesisTimestamp")," The Unix timestamp from the genesis block which is the beginning of slot 0")),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,"The slot number that includes the given timestamp."),(0,i.kt)("h4",{id:"errors-5"},"Errors"),(0,i.kt)("p",null,"The errors that the method/function will produce include:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Timestamp is before slot 0"),(0,i.kt)("li",{parentName:"ul"},"Non-positive slot duration")),(0,i.kt)("h4",{id:"testing-procedure-5"},"Testing Procedure"),(0,i.kt)("p",null,"The testing procedure for the constructor is ",(0,i.kt)("a",{parentName:"p",href:"NodeUtils/slotutil_tests/slot_timestamp_conversion_test"},"described on a separate page")))}d.isMDXComponent=!0}}]);